{"version":3,"sources":["axios.js","Typingbar.js","Message.js","Chat.js","SidebarConversation.js","Sidebar.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","useStyles","makeStyles","theme","iconButton","fontSize","fontWeight","color","grey","inputInput","backgroundColor","borderRadius","width","height","Typingbar","useState","textMessage","settextMessage","classes","sendMessage","e","a","preventDefault","newMessage","message","name","post","then","res","console","log","data","Date","timestamp","toLocaleTimeString","className","IconButton","onSubmit","InputBase","placeholder","inputProps","onChange","target","value","Message","messageName","messageContent","messageTimestamp","messageReceiver","time","avatar","palette","getContrastText","deepOrange","marginRight","Chat","messages","username","Avatar","src","map","uuidv4","SidebarConversation","date","now","weekday","Array","getDay","translateDate","Divider","light","variant","orange","searchIcon","addIcon","Sidebar","App","setMessages","useEffect","get","response","messageChannel","Pusher","cluster","subscribe","bind","unbind_all","unsubscribe","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qZAOeA,E,OALEC,EAAMC,OAAO,CAE5BC,QAAS,wCCULC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,WAAY,CACVC,SAAU,GACVC,WAAY,IACZC,MAAOC,IAAK,MAEdC,WAAY,CACVC,gBAAiB,wBACjBC,aAAc,OACdJ,MAAO,mBACPK,MAAO,OACPC,OAAQ,QA+DGC,MA3Df,WACE,IADmB,EAEmBC,mBAAS,IAF5B,mBAEZC,EAFY,KAECC,EAFD,KAGbC,EAAUjB,IAEVkB,EAAW,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DAClBD,EAAEE,iBAGIC,EAAa,CACjBC,QAASR,EACTS,KAVa,UAIG,SASA3B,EACf4B,KAAK,+BAAgCH,GACrCI,MAAK,SAACC,GACLC,QAAQC,IAAR,gCAC2BF,EAAIG,KAAKN,KADpC,eAC+C,IAAIO,KAC/CJ,EAAIG,KAAKE,WACTC,qBAHJ,eAG+BN,EAAIG,KAAKP,UAIxCP,EAAe,OAnBD,yDAAH,sDAsBjB,OACE,sBAAKkB,UAAU,YAAf,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,CAAoBD,UAAWjB,EAAQd,eAEzC,cAACgC,EAAA,EAAD,UACE,cAAC,IAAD,CAAgBD,UAAWjB,EAAQd,eAGrC,qBAAK+B,UAAU,gBAAf,SACE,sBAAME,SAAU,SAACjB,GAAD,OAAOD,EAAYC,IAAnC,SACE,cAACkB,EAAA,EAAD,CACEC,YAAY,YACZJ,UAAWjB,EAAQT,WACnB+B,WAAY,CAAE,aAAc,UAC5BC,SAAU,SAACrB,GAAD,OAAOH,EAAeG,EAAEsB,OAAOC,QACzCA,MAAO3B,QAKb,cAACoB,EAAA,EAAD,UACGpB,EACC,cAAC,IAAD,CAAkBmB,UAAWjB,EAAQd,aAErC,cAAC,IAAD,CAAa+B,UAAWjB,EAAQd,mB,MC7D3BwC,MAjBf,YAKI,IAJFC,EAIC,EAJDA,YACAC,EAGC,EAHDA,eACAC,EAEC,EAFDA,iBAEC,IADDC,uBACC,SACGC,EAAO,IAAIjB,KAEf,OADAiB,EAAOA,EAAKf,qBAEV,sBAAKC,UAAS,kBAAaa,EAAkB,mBAAqB,IAAlE,UACE,sBAAMb,UAAU,eAAhB,SAAgCU,IAChC,sBAAMV,UAAU,kBAAhB,SAAmCW,IACnC,sBAAMX,UAAU,oBAAhB,SAAqCY,Q,SCCrC9C,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC+C,OAAQ,CACN3C,MAAOJ,EAAMgD,QAAQC,gBAAgBC,IAAW,MAChD3C,gBAAiB2C,IAAW,KAC5BxC,OAAQ,OACRD,MAAO,OACP0C,YAAa,QAkDFC,MA9Cf,YAA6B,IAAbC,EAAY,EAAZA,SACRtC,EAAUjB,IADU,EAEMc,mBAAS,UAFf,mBAEnB0C,EAFmB,KAG1B,OAH0B,KAIxB,sBAAKtB,UAAU,OAAf,UAEE,sBAAKA,UAAU,iBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,cAACuB,EAAA,EAAD,CACEvB,UAAWjB,EAAQgC,OACnBS,IAAI,wGAFN,eAMA,sBAAKxB,UAAU,gBAAf,UACE,uBAAOA,UAAU,eAAjB,oBACA,uBAAOA,UAAU,iBAAjB,0BAGJ,sBAAKA,UAAU,gBAAf,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACA,EAAA,EAAD,UACE,cAAC,IAAD,YAMN,qBAAKD,UAAU,YAAf,SACGqB,EAASI,KAAI,SAACpC,GAAD,OACZ,cAAC,EAAD,CAEEqB,YAAarB,EAAQC,KACrBqB,eAAgBtB,EAAQA,QACxBuB,iBAAkB,IAAIf,KAAKR,EAAQS,WAAWC,qBAC9Cc,gBAAiBS,IAAajC,EAAQC,MAJjCoC,oBAQX,cAAC,EAAD,Q,6FC5DA5D,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvC+C,OAAQ,CACNrC,OAAQ,OACRD,MAAO,YA4CIkD,MAxBf,WACE,IAAM5C,EAAUjB,IACV8D,EAlBc,SAACA,GACrB,IAAIC,EAAM,IAAIhC,KACRiC,EAAU,IAAIC,MAAM,GAW1B,OATAD,EAAQ,GAAK,SACbA,EAAQ,GAAK,SACbA,EAAQ,GAAK,UACbA,EAAQ,GAAK,YACbA,EAAQ,GAAK,WACbA,EAAQ,GAAK,SACbA,EAAQ,GAAK,WAEJA,EAAQD,EAAIG,UAMRC,CAAcpC,KAAKgC,OAChC,OACE,sBAAK7B,UAAU,sBAAf,UACE,qBAAKA,UAAU,6BAAf,SACE,cAACuB,EAAA,EAAD,CAAQvB,UAAWjB,EAAQgC,OAAQtC,MAAM,OAAOC,OAAO,OAAvD,SACE,cAAC,IAAD,QAGJ,sBAAKsB,UAAU,8BAAf,UACE,sBAAKA,UAAU,4BAAf,UACE,uBAAOA,UAAU,2BAAjB,oBACA,uBAAOA,UAAU,2BAAjB,SAA6C4B,OAE/C,qBAAK5B,UAAU,mCAAf,SACE,uBAAOA,UAAU,2BAAjB,sBAEF,cAACkC,EAAA,EAAD,CAASC,OAAK,EAACC,QAAQ,qBCnCzBtE,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCqE,OAAQ,CACNjE,MAAOJ,EAAMgD,QAAQC,gBAAgBC,IAAW,MAChD3C,gBAAiB2C,IAAW,MAE9B5C,WAAY,CACVC,gBAAiB,wBACjBC,aAAc,OACdC,MAAO,MACPL,MAAO,oBAETkE,WAAY,CACVpE,SAAU,IAEZqE,QAAS,CACPrE,SAAU,QAgECsE,MA5Df,WACE,IAAMzD,EAAUjB,IAEhB,OACE,sBAAKkC,UAAU,UAAf,UACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAACuB,EAAA,EAAD,CACEvB,UAAWjB,EAAQsD,OACnBb,IAAI,wGAFN,iBAOF,sBAAKxB,UAAU,gBAAf,UACE,cAACC,EAAA,EAAD,UACE,cAAC,IAAD,MAEF,cAACA,EAAA,EAAD,UACE,cAAC,IAAD,CAASD,UAAWjB,EAAQwD,YAE9B,cAACtC,EAAA,EAAD,UACE,cAAC,IAAD,YAIN,qBAAKD,UAAU,oBAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,qBAAf,SACE,cAAC,IAAD,CAAYA,UAAWjB,EAAQuD,eAEjC,cAACnC,EAAA,EAAD,CACEC,YAAY,6BACZJ,UAAWjB,EAAQT,WACnB+B,WAAY,CAAE,aAAc,iBAKlC,sBAAKL,UAAU,wBAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,W,iBCzCOyC,OArCf,WAAgB,IAAD,EACmB7D,mBAAS,IAD5B,mBACNyC,EADM,KACIqB,EADJ,KA2Bb,OAxBAC,qBAAU,WACRhF,EAAMiF,IAAI,kBAAkBpD,MAAK,SAACqD,GAEhCH,EAAYG,EAASjD,WAEtB,IAEH+C,qBAAU,WAGR,IAEMG,EAFS,IAAIC,IAAO,uBAAwB,CAAEC,QAAS,OAE/BC,UAAU,YAMxC,OALAH,EAAeI,KAAK,YAAY,SAACtD,GAC/B8C,EAAY,GAAD,mBAAKrB,GAAL,CAAezB,QAIrB,WACLkD,EAAeK,aACfL,EAAeM,iBAEhB,CAAC/B,IAGF,qBAAKrB,UAAU,MAAf,SACE,sBAAKA,UAAU,WAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAMqB,SAAUA,UC3BTgC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB/D,MAAK,YAAkD,IAA/CgE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dad410d5.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  // baseURL: \"http://localhost:9000\",\r\n  baseURL: \"https://whatsapp-bck.herokuapp.com/\",\r\n});\r\n\r\nexport default instance;\r\n","import React, { useState } from \"react\";\r\nimport \"./Typingbar.css\";\r\n\r\n// Material-UI\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\r\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport MicNoneIcon from \"@material-ui/icons/MicNone\";\r\nimport axios from \"./axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  iconButton: {\r\n    fontSize: 30,\r\n    fontWeight: 200,\r\n    color: grey[600],\r\n  },\r\n  inputInput: {\r\n    backgroundColor: \"rgba(255,255,255,0.5)\",\r\n    borderRadius: \"20px\",\r\n    color: \"rgb(100,100,100)\",\r\n    width: \"100%\",\r\n    height: 40,\r\n  },\r\n}));\r\n\r\nfunction Typingbar() {\r\n  const username = \"Sorasi\";\r\n  const [textMessage, settextMessage] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Create Message object\r\n    const newMessage = {\r\n      message: textMessage,\r\n      name: username,\r\n    };\r\n\r\n    const req = await axios\r\n      .post(\"/api/v1/messages/new-message\", newMessage)\r\n      .then((res) => {\r\n        console.log(\r\n          `Sent new message from ${res.data.name} at ${new Date(\r\n            res.data.timestamp\r\n          ).toLocaleTimeString()} >> ${res.data.message}`\r\n        );\r\n        // console.log(res);\r\n        // Reset the Input to <empty>\r\n        settextMessage(\"\");\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"typingbar\">\r\n      <IconButton>\r\n        <InsertEmoticonIcon className={classes.iconButton} />\r\n      </IconButton>\r\n      <IconButton>\r\n        <AttachFileIcon className={classes.iconButton} />\r\n      </IconButton>\r\n\r\n      <div className=\"typing-search\">\r\n        <form onSubmit={(e) => sendMessage(e)}>\r\n          <InputBase\r\n            placeholder=\"Type text\"\r\n            className={classes.inputInput}\r\n            inputProps={{ \"aria-label\": \"search\" }}\r\n            onChange={(e) => settextMessage(e.target.value)}\r\n            value={textMessage}\r\n          />\r\n        </form>\r\n      </div>\r\n\r\n      <IconButton>\r\n        {textMessage ? (\r\n          <SendOutlinedIcon className={classes.iconButton} />\r\n        ) : (\r\n          <MicNoneIcon className={classes.iconButton} />\r\n        )}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Typingbar;\r\n","import React from \"react\";\r\nimport \"./Message.css\";\r\n\r\nfunction Message({\r\n  messageName,\r\n  messageContent,\r\n  messageTimestamp,\r\n  messageReceiver = false,\r\n}) {\r\n  let time = new Date();\r\n  time = time.toLocaleTimeString();\r\n  return (\r\n    <div className={`message ${messageReceiver ? \"message-receiver\" : \"\"}`}>\r\n      <span className=\"message-name\">{messageName}</span>\r\n      <span className=\"message-content\">{messageContent}</span>\r\n      <span className=\"message-timestamp\">{messageTimestamp}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React, { useState } from \"react\";\r\nimport \"./Chat.css\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport MoreVert from \"@material-ui/icons/MoreVert\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { deepOrange } from \"@material-ui/core/colors\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport Typingbar from \"./Typingbar\";\r\nimport Message from \"./Message\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatar: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n    height: \"40px\",\r\n    width: \"40px\",\r\n    marginRight: 20,\r\n  },\r\n}));\r\n\r\nfunction Chat({ messages }) {\r\n  const classes = useStyles();\r\n  const [username, setuserName] = useState(\"Sorasi\");\r\n  return (\r\n    <div className=\"chat\">\r\n      {/* Chat Bar */}\r\n      <div className=\"chatbar-navbar\">\r\n        <div className=\"chatbar-left\">\r\n          <Avatar\r\n            className={classes.avatar}\r\n            src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSkcSGx-KlYubrDTQtCaFWZ3pBI3CJOxWwUHw&usqp=CAU\"\r\n          >\r\n            S\r\n          </Avatar>\r\n          <div className=\"chatbar-title\">\r\n            <label className=\"chatbar-name\">Sorasi</label>\r\n            <label className=\"chatbar-status\">Online</label>\r\n          </div>\r\n        </div>\r\n        <div className=\"chatbar-right\">\r\n          <IconButton>\r\n            <SearchIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreHorizIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Conversation area */}\r\n      <div className=\"chat-body\">\r\n        {messages.map((message) => (\r\n          <Message\r\n            key={uuidv4()}\r\n            messageName={message.name}\r\n            messageContent={message.message}\r\n            messageTimestamp={new Date(message.timestamp).toLocaleTimeString()}\r\n            messageReceiver={username === message.name ? true : false}\r\n          />\r\n        ))}\r\n      </div>\r\n      <Typingbar />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import React from \"react\";\r\nimport \"./SidebarConversation.css\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport { makeStyles, rgbToHex } from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatar: {\r\n    height: \"60px\",\r\n    width: \"60px\",\r\n  },\r\n}));\r\n\r\nconst translateDate = (date) => {\r\n  let now = new Date();\r\n  const weekday = new Array(7);\r\n  let result;\r\n  weekday[0] = \"Sunday\";\r\n  weekday[1] = \"Monday\";\r\n  weekday[2] = \"Tuesday\";\r\n  weekday[3] = \"Wednesday\";\r\n  weekday[4] = \"Thursday\";\r\n  weekday[5] = \"Friday\";\r\n  weekday[6] = \"Saturday\";\r\n\r\n  result = weekday[now.getDay()];\r\n  return result;\r\n};\r\n\r\nfunction SidebarConversation() {\r\n  const classes = useStyles();\r\n  const date = translateDate(Date.now());\r\n  return (\r\n    <div className=\"sidebarConversation\">\r\n      <div className=\"sidebarConversation-avatar\">\r\n        <Avatar className={classes.avatar} width=\"40px\" height=\"40px\">\r\n          <GroupIcon />\r\n        </Avatar>\r\n      </div>\r\n      <div className=\"sidebarConversation-content\">\r\n        <div className=\"sidebarConversation-title\">\r\n          <label className=\"sidebarConversation-name\">Sorasi</label>\r\n          <label className=\"sidebarConversation-date\">{date}</label>\r\n        </div>\r\n        <div className=\"sidebarConversation-conversation\">\r\n          <label className=\"sidebarConversation-conv\">Sorasi</label>\r\n        </div>\r\n        <Divider light variant=\"fullWidth\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarConversation;\r\n","import React from \"react\";\r\nimport \"./Sidebar.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport MoreVert from \"@material-ui/icons/MoreVert\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { deepOrange } from \"@material-ui/core/colors\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport SidebarConversation from \"./SidebarConversation\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  orange: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n  },\r\n  inputInput: {\r\n    backgroundColor: \"rgba(255,255,255,0.5)\",\r\n    borderRadius: \"20px\",\r\n    width: \"80%\",\r\n    color: \"rgb(150,150,150)\",\r\n  },\r\n  searchIcon: {\r\n    fontSize: 20,\r\n  },\r\n  addIcon: {\r\n    fontSize: 30,\r\n  },\r\n}));\r\n\r\nfunction Sidebar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <div className=\"sidebar-navbar\">\r\n        <div className=\"sidebar-left\">\r\n          <Avatar\r\n            className={classes.orange}\r\n            src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSkcSGx-KlYubrDTQtCaFWZ3pBI3CJOxWwUHw&usqp=CAU\"\r\n          >\r\n            S\r\n          </Avatar>\r\n        </div>\r\n        <div className=\"sidebar-right\">\r\n          <IconButton>\r\n            <DonutLargeIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <AddIcon className={classes.addIcon} />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreVert />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className=\"sidebar-searchbar\">\r\n        <div className=\"sidebar-search\">\r\n          <div className=\"sidebar-searchIcon\">\r\n            <SearchIcon className={classes.searchIcon} />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search or start a new chat\"\r\n            className={classes.inputInput}\r\n            inputProps={{ \"aria-label\": \"search\" }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"sidebar-listContainer\">\r\n        <SidebarConversation />\r\n        <SidebarConversation />\r\n        <SidebarConversation />\r\n        <SidebarConversation />\r\n        <SidebarConversation />\r\n        <SidebarConversation />\r\n        <SidebarConversation />\r\n        <SidebarConversation />\r\n        <SidebarConversation />\r\n        <SidebarConversation />\r\n        <SidebarConversation />\r\n        <SidebarConversation />\r\n        <SidebarConversation />\r\n        <SidebarConversation />\r\n        <SidebarConversation />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Chat from \"./Chat\";\nimport Sidebar from \"./Sidebar\";\nimport \"./App.css\";\nimport Pusher from \"pusher-js\";\nimport axios from \"./axios\";\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    axios.get(\"/messages/sync\").then((response) => {\n      // console.log(\"Messages from 1st get : \", response.data);\n      setMessages(response.data);\n    });\n  }, []);\n\n  useEffect(() => {\n    // Pusher.logToConsole = true;\n\n    const pusher = new Pusher(\"3678c5b88461dcff7cb9\", { cluster: \"eu\" });\n\n    const messageChannel = pusher.subscribe(\"messages\");\n    messageChannel.bind(\"inserted\", (data) => {\n      setMessages([...messages, data]);\n      // console.log(\"New Message : \", data);\n    });\n    // console.log(\"Messages : \", messages);\n    return () => {\n      messageChannel.unbind_all();\n      messageChannel.unsubscribe();\n    };\n  }, [messages]);\n\n  return (\n    <div className=\"app\">\n      <div className=\"app-body\">\n        <Sidebar />\n        <Chat messages={messages} />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}