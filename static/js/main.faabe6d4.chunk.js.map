{"version":3,"sources":["MainWindow.module.css","Login.module.css","context/stateProvider.js","axios.js","Typingbar.js","Message.js","Chat.js","SidebarConversation.js","SidebarConversationSection.js","NewContact.js","NewContactList.js","SidebarNewConversationSection.js","Sidebar.js","utilities/validator.js","Login.js","Register.js","Loading.js","MainWindow.js","App.js","reportWebVitals.js","context/reducer.js","index.js","SidebarConversationSection.module.css","SidebarConversation.module.css","SidebarNewConversationSection.module.css","NewContactList.module.css","NewContact.module.css"],"names":["module","exports","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","instance","axios","create","baseURL","useStyles","makeStyles","theme","iconButton","fontSize","fontWeight","color","grey","alignSelf","paddingRight","inputInput","backgroundColor","width","breakpoints","down","padding","borderRadius","up","Typingbar","user","currentConversation","useState","textMessage","setTextMessage","classes","typingBarRef","useRef","sendButtonRef","sendMessage","e","a","preventDefault","isEmpty","newMessage","message","firstname","email","post","then","res","catch","error","console","log","submitOnEnter","event","key","shiftKey","current","click","useEffect","addEventListener","removeEventListener","className","InputBase","multiline","placeholder","inputProps","onChange","target","ref","IconButton","disabled","onClick","Message","messageName","messageContent","messageTimestamp","messageReceiver","avatar","palette","getContrastText","deepOrange","marginRight","height","displaySideBarButton","icon","Chat","contacts","conversations","dispatch","history","useHistory","chatBodyRef","window","innerWidth","windowWidth","setWindowWidth","handleResizeWidth","getCurrentInterlocutorInfo","secondChatterEmail","conversation","chatters","interlocutor","contact","lastname","replace","setFirstname","setLastname","setEmail","getChatterInfo","scrollTop","scrollHeight","messages","length","type","handleDisplaySideBar","Avatar","charAt","toUpperCase","map","moment","timestamp","format","uuidv4","gridRow","gridColumn","justifySelf","SidebarConversation","date","now","Date","weekday","Array","getDay","translateDate","selected","setSelected","lastMessage","setLastMessage","lastMessageDate","setLastMessageDate","getInterlocutorInfo","chatterEmail","handleLastMessageDate","_id","styles","sidebarConversation","sidebarConversation__isCurrent","currentConv","changeCurrentConversation","sidebarConversation__name","sidebarConversation__date","sidebarConversation__lastMessage","Divider","light","variant","searchIcon","addIcon","teal","margin","newConversationButton","position","bottom","right","SidebarConversationSection","sidebar__mainContent","sidebar__navbar","slice","sidebar__username","sideSection","sidebar__listContainer","NewContact","createNewChat","exists","data","newContact","newContact__name","newGroupButton","NewContactList","newContactList","newContactList__listContacts","backButton","marginButton","SidebarNewConversationSection","sidebar__title","Sidebar","sectionName","setSectionName","Drawer","anchor","open","validateInput","checktype","password","password2","errors","mailFormat","match","isValid","logo","login__signinButton","login__newAccountButton","boxShadow","textFieldStyle","root","Login","setPassword","errorMessages","setErrorMessages","isLoading","setIsLoading","setUser","userId","signIn","credentials","push","response","serverError","incorrectPassword","login","login__form","login__elementPosition","hidden","login__errorMessage","TextField","helperText","label","Button","CircularProgress","style","href","login__title","register__signupButton","Register","setPassword2","signUp","newUser","knownUser","to","logoPositionLeft","logo2","iconPosition","circularProgress","Loading","location","useLocation","get","contacts_list","syncContacts","convs","syncConversations","pathname","messageChannel","Pusher","cluster","subscribe","bind","unbind_all","unsubscribe","setTimeout","MainWindow","displaySideBar","app__body","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","state","action","i","String","conversationId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.faabe6d4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app__body\":\"MainWindow_app__body__3K-96\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__3aCsy\",\"login__title\":\"Login_login__title__2k-M-\",\"login__form\":\"Login_login__form__1kOjr\",\"login__elementPosition\":\"Login_login__elementPosition__2Odpt\",\"login__errorMessage\":\"Login_login__errorMessage__2xJvH\"};","import react, { createContext, useContext, useReducer } from \"react\";\r\n\r\n// Prepare the dataLayer ( also named store)\r\n// Equivalent to createStore in Redux\r\nexport const StateContext = createContext();\r\n\r\n//Wrap our app and provide the data layer\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  // baseURL: \"http://localhost:9000\",\r\n  baseURL: \"https://whatsapp-bck.herokuapp.com/\",\r\n});\r\n\r\nexport default instance;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { useStateValue } from \"./context/stateProvider\";\r\nimport \"./Typingbar.css\";\r\nimport isEmpty from \"is-empty\";\r\n\r\n// Material-UI\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\r\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport MicNoneIcon from \"@material-ui/icons/MicNone\";\r\nimport axios from \"./axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  iconButton: {\r\n    fontSize: 30,\r\n    fontWeight: 200,\r\n    color: grey[600],\r\n    alignSelf: \"end\",\r\n    paddingRight: 0,\r\n  },\r\n  inputInput: {\r\n    backgroundColor: \"rgba(255,255,255,0.5)\",\r\n\r\n    color: \"rgb(100,100,100)\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.down(767.98)]: {\r\n      padding: 10,\r\n      fontSize: \"1em\",\r\n      borderRadius: 20,\r\n    },\r\n    [theme.breakpoints.up(768)]: {\r\n      padding: 16,\r\n      fontSize: \"1.4em\",\r\n      borderRadius: 24,\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Typingbar() {\r\n  const [{ user, currentConversation }, dispatch] = useStateValue();\r\n  const [textMessage, setTextMessage] = useState(\"\");\r\n  const classes = useStyles();\r\n  const typingBarRef = useRef();\r\n  const sendButtonRef = useRef();\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isEmpty(textMessage)) {\r\n      return;\r\n    }\r\n\r\n    // Create Message object\r\n    const newMessage = {\r\n      message: textMessage,\r\n      firstname: user.firstname,\r\n      email: user.email,\r\n    };\r\n\r\n    // erase the typing bar\r\n    setTextMessage(\"\");\r\n\r\n    const req = await axios\r\n      .post(\"/messages/new-message\", {\r\n        newMessage: newMessage,\r\n        currentConversation: currentConversation,\r\n      })\r\n      .then((res) => {})\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  // Apply eventListener to Enter key press\r\n  const submitOnEnter = (event) => {\r\n    if (event.key === \"Enter\" && !event.shiftKey) {\r\n      sendButtonRef.current.click();\r\n      event.preventDefault(); // Prevents the addition of a new line in the text field (not needed in a lot of cases)\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    typingBarRef.current.addEventListener(\"keypress\", submitOnEnter);\r\n    return () => {\r\n      typingBarRef.current.removeEventListener(\"keypress\", submitOnEnter);\r\n    };\r\n  }, []);\r\n  const handleTextMessage = (value) => {\r\n    setTextMessage(value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"typingbar\">\r\n      {/* <IconButton>\r\n        <InsertEmoticonIcon className={classes.iconButton} />\r\n      </IconButton>\r\n      <IconButton>\r\n        <AttachFileIcon className={classes.iconButton} />\r\n      </IconButton> */}\r\n\r\n      <div\r\n        className=\"typing-search\"\r\n        // onSubmit={(e) => sendMessage(e)}\r\n      >\r\n        <form className=\"form\">\r\n          <InputBase\r\n            multiline\r\n            placeholder=\"Type text\"\r\n            className={classes.inputInput}\r\n            inputProps={{ \"aria-label\": \"search\" }}\r\n            onChange={(e) => handleTextMessage(e.target.value)}\r\n            value={textMessage}\r\n            ref={typingBarRef}\r\n          />\r\n        </form>\r\n      </div>\r\n\r\n      <IconButton\r\n        ref={sendButtonRef}\r\n        disabled={textMessage ? false : true}\r\n        onClick={(e) => sendMessage(e)}\r\n        className={classes.iconButton}\r\n      >\r\n        <SendOutlinedIcon className={classes.iconButton} />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Typingbar;\r\n","import React from \"react\";\r\nimport \"./Message.css\";\r\n\r\nfunction Message({\r\n  messageName,\r\n  messageContent,\r\n  messageTimestamp,\r\n  messageReceiver = false,\r\n}) {\r\n  return (\r\n    <div className={messageReceiver ? \"message-receiver\" : \"message\"}>\r\n      {/* <span className=\"message-name\">{messageName}</span> */}\r\n      <p className=\"message-content\">{messageContent}</p>\r\n      <p className=\"message-timestamp\">{messageTimestamp}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React, { useState, useEffect, useLayoutEffect, useRef } from \"react\";\r\nimport { useStateValue } from \"./context/stateProvider\";\r\nimport axios from \"./axios\";\r\nimport isEmpty from \"is-empty\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\nimport \"./Chat.css\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { deepOrange } from \"@material-ui/core/colors\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport Typingbar from \"./Typingbar\";\r\nimport Message from \"./Message\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatar: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[300],\r\n\r\n    [theme.breakpoints.down(768)]: {\r\n      marginRight: 10,\r\n      height: 32,\r\n      width: 32,\r\n      fontSize: 20,\r\n    },\r\n\r\n    [theme.breakpoints.up(768)]: {\r\n      marginRight: 20,\r\n      height: 60,\r\n      width: 60,\r\n      fontSize: 36,\r\n    },\r\n  },\r\n  displaySideBarButton: {\r\n    [theme.breakpoints.down(768)]: {\r\n      padding: 4,\r\n    },\r\n  },\r\n  icon: {\r\n    color: \"white\",\r\n  },\r\n}));\r\n\r\nfunction Chat() {\r\n  const classes = useStyles();\r\n  const [\r\n    { user, currentConversation, contacts, conversations },\r\n    dispatch,\r\n  ] = useStateValue();\r\n  const history = useHistory();\r\n  const chatBodyRef = useRef();\r\n\r\n  // Keep track of window innerWidth\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  useEffect(() => {\r\n    // Handler to call on window resize\r\n    function handleResizeWidth() {\r\n      // Set window widthto state\r\n      setWindowWidth(window.innerWidth);\r\n    }\r\n    // Add event listener\r\n    window.addEventListener(\"resize\", handleResizeWidth);\r\n\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener(\"resize\", handleResizeWidth);\r\n  });\r\n\r\n  const handleDisplaySideBar = (e) => {\r\n    e.preventDefault();\r\n\r\n    dispatch({\r\n      type: \"DISPLAY_SIDEBAR\",\r\n    });\r\n  };\r\n\r\n  const getCurrentInterlocutorInfo = () => {\r\n    let secondChatterEmail = \"\";\r\n    // get the interlocurotr address from conversation\r\n    let conversation = null;\r\n    try {\r\n      if (isEmpty(currentConversation) && !isEmpty(conversations)) {\r\n        // console.log(\"go 1\");\r\n        conversation = conversations[0];\r\n      } else if (!isEmpty(currentConversation)) {\r\n        console.log(currentConversation);\r\n        conversation = currentConversation;\r\n      } else {\r\n        return;\r\n        // history.replace(\"/whatsapp-clone/login\");\r\n      }\r\n\r\n      for (let email of conversation.chatters) {\r\n        if (email !== user.email) {\r\n          secondChatterEmail = email;\r\n        }\r\n      }\r\n\r\n      // get interlocutor firstname and lastname from contacts\r\n      let interlocutor = {};\r\n      for (let contact of contacts) {\r\n        if (contact.email === secondChatterEmail) {\r\n          interlocutor.firstname = contact.firstname;\r\n          interlocutor.lastname = contact.lastname;\r\n          interlocutor.email = contact.email;\r\n        }\r\n      }\r\n\r\n      return interlocutor;\r\n    } catch (error) {\r\n      console.log(error);\r\n      history.replace(\"/whatsapp-clone/login\");\r\n    }\r\n  };\r\n\r\n  // Keep in state the second chatter information\r\n  const [firstname, setFirstname] = useState(\"\");\r\n  const [lastname, setLastname] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  // find the information of the interlocutor\r\n  const getChatterInfo = () => {\r\n    if (isEmpty(currentConversation)) {\r\n      // console.log(\"marche pas \");\r\n    } else {\r\n      const interlocutor = getCurrentInterlocutorInfo();\r\n      console.log(interlocutor);\r\n      if (interlocutor) {\r\n        setFirstname(interlocutor.firstname);\r\n        setLastname(interlocutor.lastname);\r\n        setEmail(interlocutor.email);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getChatterInfo();\r\n    chatBodyRef.current.scrollTop = chatBodyRef.current.scrollHeight;\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const interlocutor = getCurrentInterlocutorInfo();\r\n    if (isEmpty(interlocutor)) {\r\n      return;\r\n    }\r\n    setFirstname(interlocutor.firstname);\r\n    setLastname(interlocutor.lastname);\r\n    chatBodyRef.current.scrollTop = chatBodyRef.current.scrollHeight;\r\n  }, [currentConversation]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"Hello\");\r\n    chatBodyRef.current.scrollTop = chatBodyRef.current.scrollHeight;\r\n  }, [currentConversation.messages.length]);\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      {/* Chat Bar */}\r\n      <div className=\"chatbar-navbar\">\r\n        {windowWidth < 768 && (\r\n          <IconButton\r\n            className={classes.displaySideBarButton}\r\n            onClick={(e) => handleDisplaySideBar(e)}\r\n          >\r\n            <ArrowBackIcon className={classes.icon} />\r\n          </IconButton>\r\n        )}\r\n\r\n        <Avatar\r\n          className={classes.avatar}\r\n          // src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSkcSGx-KlYubrDTQtCaFWZ3pBI3CJOxWwUHw&usqp=CAU\"\r\n        >\r\n          {firstname?.charAt(0).toUpperCase()}\r\n        </Avatar>\r\n        <div className=\"chatbar-title\">\r\n          <label className=\"chatbar-name\">\r\n            {firstname.toUpperCase()} {firstname?.charAt(0).toUpperCase()}.\r\n          </label>\r\n          {/* <label className=\"chatbar-status\">Online</label> */}\r\n        </div>\r\n        {/* <div className=\"chatbar-right\">\r\n          <IconButton>\r\n            <SearchIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreHorizIcon />\r\n          </IconButton>\r\n        </div> */}\r\n      </div>\r\n\r\n      {/* Conversation area */}\r\n      <div className=\"chat-body\" ref={chatBodyRef}>\r\n        {!isEmpty(currentConversation?.messages)\r\n          ? currentConversation.messages?.map((message) => (\r\n              <Message\r\n                key={uuidv4()}\r\n                messageName={message.firstname}\r\n                messageContent={message.message}\r\n                messageTimestamp={moment(message.timestamp).format(\"LT\")}\r\n                messageReceiver={user.email !== message.email ? true : false}\r\n              />\r\n            ))\r\n          : \"\"}\r\n      </div>\r\n      <Typingbar />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import React, { useState, useEffect, Fragment } from \"react\";\r\nimport { useStateValue } from \"./context/stateProvider\";\r\nimport axios from \"./axios\";\r\nimport isEmpty from \"is-empty\";\r\nimport moment from \"moment\";\r\n\r\nimport styles from \"./SidebarConversation.module.css\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { deepOrange } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatar: {\r\n    gridRow: \"1/3\",\r\n    gridColumn: \"1/1\",\r\n    justifySelf: \"center\",\r\n    alignSelf: \"center\",\r\n    backgroundColor: deepOrange[300],\r\n    [theme.breakpoints.down(768)]: {\r\n      width: 48,\r\n      height: 48,\r\n    },\r\n    [theme.breakpoints.up(768)]: {\r\n      width: 60,\r\n      height: 60,\r\n    },\r\n  },\r\n}));\r\n\r\nconst translateDate = (date) => {\r\n  let now = new Date();\r\n  const weekday = new Array(7);\r\n  let result;\r\n  weekday[0] = \"Sunday\";\r\n  weekday[1] = \"Monday\";\r\n  weekday[2] = \"Tuesday\";\r\n  weekday[3] = \"Wednesday\";\r\n  weekday[4] = \"Thursday\";\r\n  weekday[5] = \"Friday\";\r\n  weekday[6] = \"Saturday\";\r\n\r\n  result = weekday[now.getDay()];\r\n  return result;\r\n};\r\n\r\nfunction SidebarConversation({ conversation }) {\r\n  const classes = useStyles();\r\n  const date = translateDate(Date.now());\r\n  const [\r\n    { messages, user, currentConversation, conversations, contacts },\r\n    dispatch,\r\n  ] = useStateValue();\r\n\r\n  const [mounted, setMounted] = useState(true);\r\n  const [selected, setSelected] = useState(false);\r\n  const [lastMessage, setLastMessage] = useState(\r\n    conversation.messages[conversation.messages.length - 1]?.message\r\n  );\r\n  const [lastMessageDate, setLastMessageDate] = useState(\r\n    moment(\r\n      conversation.messages[conversation.messages.length - 1]?.timestamp\r\n    ).format(\"L\")\r\n  );\r\n\r\n  const getInterlocutorInfo = () => {\r\n    let email = \"\";\r\n    // get the interlocurotr address from conversation\r\n    for (let chatterEmail of conversation.chatters) {\r\n      if (chatterEmail !== user.email) {\r\n        email = chatterEmail;\r\n      }\r\n    }\r\n\r\n    // get interlocutor firstname and lastname from contacts\r\n    let interlocutor = {};\r\n    for (let contact of contacts) {\r\n      if (contact.email === email) {\r\n        interlocutor.firstname = contact.firstname;\r\n        interlocutor.lastname = contact.lastname;\r\n        interlocutor.email = contact.email;\r\n      }\r\n    }\r\n\r\n    return interlocutor;\r\n  };\r\n  const [firstname, setFirstname] = useState(getInterlocutorInfo().firstname);\r\n  const [lastname, setLastname] = useState(getInterlocutorInfo().lastname);\r\n  const [email, setEmail] = useState(getInterlocutorInfo().email);\r\n\r\n  // Get the last message date to display\r\n  const handleLastMessageDate = (date) => {\r\n    if (moment(date).format(\"L\") === moment().format(\"L\")) {\r\n      setLastMessageDate(moment(date).format(\"LT\"));\r\n    } else {\r\n      setLastMessageDate(moment(date).format(\"L\"));\r\n    }\r\n  };\r\n\r\n  // define the last message and the last message date to display\r\n  useEffect(() => {\r\n    if (!isEmpty(conversation.messages)) {\r\n      setLastMessage(\r\n        conversation.messages[conversation.messages.length - 1].message\r\n      );\r\n      handleLastMessageDate(\r\n        conversation.messages[conversation.messages.length - 1].timestamp\r\n      );\r\n    } else {\r\n      setLastMessage(\"Hey ! I am using What's App Clone\");\r\n    }\r\n  }, [conversation]);\r\n\r\n  // Define the new currentConversation\r\n  const changeCurrentConversation = (e) => {\r\n    e.preventDefault();\r\n    dispatch({\r\n      type: \"SET_CURRENT_CONVERSATION\",\r\n      currentConv: conversation,\r\n    });\r\n    dispatch({\r\n      type: \"DISPLAY_SIDEBAR\",\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (conversation._id === currentConversation._id) {\r\n      setSelected(true);\r\n    } else {\r\n      // console.log(\"conv \" + conversation._id + \": unselected\");\r\n      setSelected(false);\r\n    }\r\n  }, [currentConversation]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className={`${styles.sidebarConversation} ${\r\n          selected ? styles.sidebarConversation__isCurrent : \"\"\r\n        }`}\r\n        onClick={(e) => changeCurrentConversation(e)}\r\n      >\r\n        <Avatar className={classes.avatar}>\r\n          {firstname?.charAt(0).toUpperCase()}\r\n        </Avatar>\r\n        <div className={styles.sidebarConversation__name}>\r\n          {firstname} {lastname}\r\n        </div>\r\n        <p className={styles.sidebarConversation__date}>{lastMessageDate}</p>\r\n        <p className={styles.sidebarConversation__lastMessage}>{lastMessage}</p>\r\n      </div>\r\n      <Divider light variant=\"fullWidth\" />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default SidebarConversation;\r\n","// Section where is diaplayed the list of conversation engaged by the signed in user\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useStateValue } from \"./context/stateProvider\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport \"./SidebarConversationSection.module.css\";\r\nimport styles from \"./SidebarConversationSection.module.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\r\nimport QuestionAnswerIcon from \"@material-ui/icons/QuestionAnswer\";\r\nimport MoreVert from \"@material-ui/icons/MoreVert\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { deepOrange, teal } from \"@material-ui/core/colors\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport SidebarConversation from \"./SidebarConversation\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatar: {\r\n    backgroundColor: deepOrange[300],\r\n    [theme.breakpoints.down(768)]: {\r\n      width: 30,\r\n      height: 30,\r\n    },\r\n    [theme.breakpoints.up(768)]: {\r\n      width: 50,\r\n      height: 50,\r\n    },\r\n  },\r\n  inputInput: {\r\n    backgroundColor: \"rgba(255,255,255,0.5)\",\r\n    borderRadius: \"20px\",\r\n    width: \"80%\",\r\n    color: \"rgb(150,150,150)\",\r\n  },\r\n  searchIcon: {\r\n    fontSize: 20,\r\n  },\r\n  addIcon: {\r\n    color: \"white\",\r\n    padding: 10,\r\n    borderRadius: \"50%\",\r\n    [theme.breakpoints.down(768)]: {\r\n      width: 30,\r\n      height: 30,\r\n      backgroundColor: teal[300],\r\n    },\r\n    [theme.breakpoints.up(768)]: {\r\n      width: 40,\r\n      height: 40,\r\n    },\r\n  },\r\n  margin: {\r\n    margin: 5,\r\n  },\r\n  newConversationButton: {\r\n    [theme.breakpoints.down(768)]: {\r\n      position: \"fixed\",\r\n      bottom: 5,\r\n      right: 5,\r\n    },\r\n    [theme.breakpoints.up(768)]: {\r\n      justifySelf: \"flex-end\",\r\n      padding: 0,\r\n    },\r\n  },\r\n}));\r\n\r\nfunction SidebarConversationSection() {\r\n  const classes = useStyles();\r\n  const [{ user, contacts, conversations }, dispatch] = useStateValue();\r\n\r\n  useEffect(() => {}, [conversations]);\r\n\r\n  return (\r\n    <div className={styles.sidebar__mainContent}>\r\n      <div className={styles.sidebar__navbar}>\r\n        <Avatar className={`${classes.avatar} ${classes.margin}`}>\r\n          {user?.firstname.slice(0, 1).toUpperCase()}\r\n        </Avatar>\r\n        <p className={`${styles.sidebar__username} ${classes.margin}`}>\r\n          {user?.firstname.toUpperCase()}\r\n        </p>\r\n        <IconButton\r\n          className={classes.newConversationButton}\r\n          onClick={(e) =>\r\n            dispatch({\r\n              type: \"SET_SIDEBAR_SECTION\",\r\n              sideSection: \"new-conversation\",\r\n            })\r\n          }\r\n        >\r\n          <QuestionAnswerIcon fontSize=\"small\" className={classes.addIcon} />\r\n        </IconButton>\r\n      </div>\r\n      {/* <div className={styles.sidebar__searchbar}>\r\n        <div className={styles.sidebar__search}>\r\n          <div className={styles.sidebar__searchIcon}>\r\n            <SearchIcon className={classes.searchIcon} />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search or start a new chat\"\r\n            className={classes.inputInput}\r\n            inputProps={{ \"aria-label\": \"search\" }}\r\n          />\r\n        </div>\r\n      </div> */}\r\n\r\n      <div className={styles.sidebar__listContainer}>\r\n        {conversations.map((conversation) => (\r\n          <SidebarConversation key={uuidv4()} conversation={conversation} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarConversationSection;\r\n","import React, { Fragment } from \"react\";\r\nimport axios from \"./axios\";\r\nimport { useStateValue } from \"./context/stateProvider\";\r\n\r\nimport styles from \"./NewContact.module.css\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { deepOrange } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatar: {\r\n    backgroundColor: deepOrange[600],\r\n    [theme.breakpoints.down(768)]: {\r\n      width: 48,\r\n      height: 48,\r\n      marginRight: 10,\r\n    },\r\n    [theme.breakpoints.up(768)]: {\r\n      width: 60,\r\n      height: 60,\r\n      fontSize: 32,\r\n      marginRight: 20,\r\n    },\r\n  },\r\n}));\r\n\r\nfunction NewContact({ contact }) {\r\n  const classes = useStyles();\r\n  const [\r\n    { user, currentConversation, conversations },\r\n    dispatch,\r\n  ] = useStateValue();\r\n\r\n  const createNewChat = async () => {\r\n    // e.preventDefault();\r\n\r\n    await axios\r\n      .post(\"conversations/new-chat\", { chatters: [user.email, contact.email] })\r\n      .then((res) => {\r\n        // console.log(res);\r\n        // console.log(\r\n        //   \"Created new chat between\" +\r\n        //     res.data.chatters[0] +\r\n        //     \" and\" +\r\n        //     res.data.chatters[1] +\r\n        //     \" : activated => \" +\r\n        //     res.data.activated\r\n        // );\r\n        // console.log(res.data._id);\r\n        // console.log(typeof res.data._id);\r\n\r\n        // if the conversation already exists, do not add to the list of conversations in store\r\n        let exists = false;\r\n        for (let conversation of conversations) {\r\n          if (conversation._id === res.data._id) {\r\n            exists = true;\r\n          }\r\n        }\r\n        if (!exists) {\r\n          // console.log(\"going\");\r\n          dispatch({\r\n            type: \"ADD_CONVERSATION\",\r\n            conversation: res.data,\r\n          });\r\n        }\r\n\r\n        // Set the new conversation as the current conversatio nto display\r\n        dispatch({\r\n          type: \"SET_CURRENT_CONVERSATION\",\r\n          currentConv: res.data,\r\n        });\r\n\r\n        //Go back to Conversation Section\r\n        dispatch({\r\n          type: \"SET_SIDEBAR_SECTION\",\r\n          sideSection: \"conversations\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={styles.newContact} onClick={(e) => createNewChat()}>\r\n        <Avatar\r\n          className={classes.avatar}\r\n          //   src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSkcSGx-KlYubrDTQtCaFWZ3pBI3CJOxWwUHw&usqp=CAU\"\r\n        >\r\n          {contact.firstname[0].toUpperCase()}\r\n        </Avatar>\r\n        <p className={styles.newContact__name}>\r\n          {contact.firstname} {contact.lastname}\r\n        </p>\r\n      </div>\r\n      <Divider light variant=\"fullWidth\" />\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default NewContact;\r\n","import React from \"react\";\r\nimport { useStateValue } from \"./context/stateProvider\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport styles from \"./NewContactList.module.css\";\r\nimport { makeStyles, withTheme } from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\r\nimport NewContact from \"./NewContact\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  newGroupButton: {\r\n    borderRadius: \"50%\",\r\n    backgroundColor: \"#007868\",\r\n    color: \"white\",\r\n    width: 30,\r\n    height: 30,\r\n    padding: 10,\r\n    marginRight: 10,\r\n  },\r\n}));\r\n\r\nfunction NewContactList() {\r\n  const classes = useStyles();\r\n\r\n  const [{ sideSection, contacts }, dispatch] = useStateValue();\r\n  // console.log(\"CONTACTS LIST >> \");\r\n  // console.log(contacts);\r\n\r\n  return (\r\n    <div className={styles.newContactList}>\r\n      {/* <div\r\n        className={styles.newContactList__item}\r\n        onClick={(e) =>\r\n          dispatch({ type: \"SET_SIDEBAR_SECTION\", sideSection: \"new_group\" })\r\n        }\r\n      >\r\n        <GroupAddIcon className={classes.newGroupButton} />\r\n\r\n        <label className={styles.newContactList__title}>NEW GROUP</label>\r\n      </div>\r\n      <Divider light variant=\"fullWidth\" /> */}\r\n      <div className={styles.newContactList__listContacts}>\r\n        {/* <div className={`${styles.title}`}>\r\n          <label className={styles.newContactList__title2}>\r\n            FREQUENTLY CONTACTED\r\n          </label>\r\n        </div>\r\n        <Divider light variant=\"fullWidth\" /> */}\r\n        {contacts.map((contact) => (\r\n          <NewContact key={uuidv4()} contact={contact} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewContactList;\r\n","import React from \"react\";\r\nimport { useStateValue } from \"./context/stateProvider\";\r\nimport NewContactList from \"./NewContactList\";\r\n\r\nimport styles from \"./SidebarNewConversationSection.module.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles({\r\n  backButton: {\r\n    color: \"white\",\r\n    fontSize: 35,\r\n  },\r\n  marginButton: {\r\n    marginRight: 10,\r\n  },\r\n});\r\n\r\nfunction SidebarNewConversationSection() {\r\n  const classes = useStyles();\r\n  const [{}, dispatch] = useStateValue();\r\n  return (\r\n    <div className={styles.sidebar__mainContent}>\r\n      {/* Header */}\r\n      <div className={styles.sidebar__navbar}>\r\n        <IconButton\r\n          className={classes.marginButton}\r\n          onClick={(e) =>\r\n            dispatch({\r\n              type: \"SET_SIDEBAR_SECTION\",\r\n              sideSection: \"conversations\",\r\n            })\r\n          }\r\n        >\r\n          <ArrowBackIcon className={classes.backButton} />\r\n        </IconButton>\r\n        <p className={styles.sidebar__title}>New Chat</p>\r\n      </div>\r\n      {/* Search Bar */}\r\n      {/* <div className={styles.sidebar__searchbar}>\r\n        <div className={styles.sidebar__search}>\r\n          <div className={styles.sidebar__searchIcon}>\r\n            <SearchIcon className={classes.searchIcon} />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search or start a new chat\"\r\n            className={classes.inputInput}\r\n            inputProps={{ \"aria-label\": \"search\" }}\r\n          />\r\n        </div>\r\n      </div> */}\r\n      <div className={styles.sidebar__listContainer}>\r\n        <NewContactList />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarNewConversationSection;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useStateValue } from \"./context/stateProvider\";\r\nimport SidebarConversationSection from \"./SidebarConversationSection\";\r\nimport SidebarNewConversationSection from \"./SidebarNewConversationSection\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\n\r\nimport \"./Sidebar.css\";\r\n\r\nfunction Sidebar() {\r\n  const history = useHistory();\r\n  const [\r\n    { user, conversations, sideSection, currentConversation },\r\n    dispatch,\r\n  ] = useStateValue();\r\n  const [sectionName, setSectionName] = useState(sideSection);\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      history.replace(\"/whatsapp-clone/login\");\r\n    }\r\n    setSectionName(sideSection);\r\n  }, [sideSection]);\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <SidebarConversationSection />\r\n      <Drawer\r\n        anchor=\"left\"\r\n        open={sectionName === \"new-conversation\" ? true : false}\r\n      >\r\n        <SidebarNewConversationSection />\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import { NetworkCheckSharp } from \"@material-ui/icons\";\r\nimport isEmpty from \"is-empty\";\r\n\r\nconst validateInput = (\r\n  { firstname = \"\", lastname = \"\", email, password, password2 = \"\" },\r\n  checktype\r\n) => {\r\n  const errors = {};\r\n  const mailFormat = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\r\n\r\n  switch (checktype) {\r\n    case \"login\":\r\n      if (isEmpty(email)) {\r\n        errors.email = \"Email is empty\";\r\n      } else if (!email.match(mailFormat)) {\r\n        errors.email = \"Email wrong format\";\r\n      }\r\n      if (isEmpty(password)) {\r\n        errors.password = \"Password  is empty\";\r\n      }\r\n      break;\r\n\r\n    case \"register\":\r\n      if (isEmpty(firstname)) {\r\n        errors.firstname = \"Firstname is empty\";\r\n      }\r\n      if (isEmpty(lastname)) {\r\n        errors.lastname = \"Lastname is empty\";\r\n      }\r\n      if (isEmpty(email)) {\r\n        errors.email = \"Email is empty\";\r\n      } else if (!email.match(mailFormat)) {\r\n        errors.email = \"Email wrong format\";\r\n      }\r\n      if (isEmpty(password) || isEmpty(password2)) {\r\n        if (isEmpty(password)) {\r\n          errors.password = \"Password  is empty\";\r\n        }\r\n        if (isEmpty(password2)) {\r\n          console.log(\"error\");\r\n          errors.password2 = \"Confirm Password is empty\";\r\n        }\r\n      } else if (password !== password2) {\r\n        errors.password = \"Error confirming the password\";\r\n      }\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n\r\n  return {\r\n    errors,\r\n    isValid: isEmpty(errors),\r\n  };\r\n};\r\n\r\nexport default validateInput;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useStateValue } from \"./context/stateProvider\";\r\nimport axios from \"./axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n// Material UI + styling\r\nimport styles from \"./Login.module.css\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport WhatsAppIcon from \"@material-ui/icons/WhatsApp\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport validateInput from \"./utilities/validator\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport { teal } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  logo: {\r\n    color: teal[500],\r\n    justifySelf: \"center\",\r\n    [theme.breakpoints.down(768)]: {\r\n      width: 44,\r\n      height: 44,\r\n    },\r\n    [theme.breakpoints.up(768)]: {\r\n      width: 100,\r\n      height: 100,\r\n    },\r\n  },\r\n  login__signinButton: {\r\n    backgroundColor: teal[500],\r\n    color: \"white\",\r\n    \"&:hover\": {\r\n      backgroundColor: teal[300],\r\n    },\r\n  },\r\n  login__newAccountButton: {\r\n    color: \"grey\",\r\n    backgroundColor: \"inherit\",\r\n    boxShadow: \"none\",\r\n    \"&:hover\": {\r\n      color: teal[500],\r\n      boxShadow: \"none\",\r\n      backgroundColor: \"inherit\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst textFieldStyle = makeStyles((theme) => ({\r\n  root: {\r\n    padding: 5,\r\n  },\r\n}));\r\n\r\nfunction Login() {\r\n  const [{ user }, dispatch] = useStateValue();\r\n  const classes = useStyles();\r\n  const textFieldClass = textFieldStyle();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessages, setErrorMessages] = useState({});\r\n  const history = useHistory();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  // Keep track of window innerWidth\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  useEffect(() => {\r\n    // Handler to call on window resize\r\n    function handleResizeWidth() {\r\n      // Set window widthto state\r\n      setWindowWidth(window.innerWidth);\r\n    }\r\n    // Add event listener\r\n    window.addEventListener(\"resize\", handleResizeWidth);\r\n\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener(\"resize\", handleResizeWidth);\r\n  });\r\n\r\n  const setUser = (firstname, lastname, email) => {\r\n    dispatch({\r\n      type: \"SET_USER\",\r\n      user: {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        email: email,\r\n        userId: \"random_value\",\r\n      },\r\n    });\r\n  };\r\n\r\n  const signIn = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // isLoading to True\r\n    setIsLoading(true);\r\n\r\n    // Reset the list of error messages\r\n    setErrorMessages([]);\r\n\r\n    //   Check validity of the input\r\n    const { errors, isValid } = validateInput({ email, password }, \"login\");\r\n\r\n    if (isValid) {\r\n      const credentials = {\r\n        email: email,\r\n        password: password,\r\n      };\r\n      console.log(`Connection attempt from ${credentials.email} >>>`);\r\n      const request = await axios\r\n        .post(\"/users/login\", credentials)\r\n        .then((res) => {\r\n          console.log(\"Login successful >> \", res.data.data.email);\r\n          // save the user in the data layer/store\r\n          setUser(\r\n            res.data.data.firstname,\r\n            res.data.data.lastname,\r\n            res.data.data.email\r\n          );\r\n          history.push(\"/whatsapp-clone/loading\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          if (error.response) {\r\n            setErrorMessages({\r\n              serverError: error.response.data.errors.incorrectPassword,\r\n            });\r\n          } else {\r\n            setErrorMessages({\r\n              serverError:\r\n                \"Connection failed: The service is temporarily unavailable. Please try again later\",\r\n            });\r\n          }\r\n          // reset Password and email\r\n          setPassword(\"\");\r\n          setEmail(\"\");\r\n        });\r\n    } else {\r\n      console.log(\">>> Error Sign In : check credentials\");\r\n      setErrorMessages(errors);\r\n    }\r\n\r\n    // isLoading to False\r\n    setIsLoading(false);\r\n  };\r\n  return (\r\n    <div className={styles.login}>\r\n      <form className={styles.login__form}>\r\n        <WhatsAppIcon\r\n          className={`${classes.logo} ${styles.login__elementPosition}`}\r\n        />\r\n\r\n        <p className={styles.login__elementPosition}> Sign In </p>\r\n\r\n        <p\r\n          hidden={errorMessages?.serverError ? false : true}\r\n          className={`${styles.login__elementPosition} ${styles.login__errorMessage}`}\r\n        >\r\n          <ErrorIcon />\r\n          {errorMessages?.serverError}\r\n        </p>\r\n\r\n        <TextField\r\n          error={errorMessages?.email ? true : false}\r\n          helperText={errorMessages?.email}\r\n          className={`${styles.login__elementPosition} `}\r\n          // inputProps={{\r\n          //   className: textFieldClass.root,\r\n          // }}\r\n          label=\"email\"\r\n          variant=\"outlined\"\r\n          value={email}\r\n          type=\"email\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <TextField\r\n          error={errorMessages?.password ? true : false}\r\n          helperText={errorMessages?.password}\r\n          className={styles.login__elementPosition}\r\n          label=\"password\"\r\n          variant=\"outlined\"\r\n          value={password}\r\n          type=\"password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <Button\r\n          disabled={isLoading}\r\n          className={`${styles.login__elementPosition} ${classes.login__signinButton}`}\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          onClick={(e) => signIn(e)}\r\n        >\r\n          Sign In\r\n          {isLoading && <CircularProgress style={{ color: \"white\" }} />}\r\n        </Button>\r\n        <p className={styles.login__elementPosition}> Or </p>\r\n        <Button\r\n          className={`${styles.login__elementPosition} ${classes.login__newAccountButton}`}\r\n          href=\"/whatsapp-clone/new-account\"\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n        >\r\n          Create new account\r\n        </Button>\r\n        <div className={styles.login__elementPosition}>\r\n          <p>TEST :</p>\r\n          <p>email: user1@email.com</p>\r\n          <p>pwd: test1</p>\r\n        </div>\r\n      </form>\r\n      <h1 className={styles.login__title}>What's app Clone</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"./axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useStateValue } from \"./context/stateProvider\";\r\nimport validateInput from \"./utilities/validator\";\r\n\r\n// Material UI and Styling\r\nimport styles from \"./Login.module.css\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport AlternateEmailIcon from \"@material-ui/icons/AlternateEmail\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport ErrorIcon from \"@material-ui/icons/Error\";\r\nimport { teal } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  logo: {\r\n    width: 40,\r\n    height: 40,\r\n  },\r\n  register__signupButton: {\r\n    backgroundColor: teal[500],\r\n    color: \"white\",\r\n    \"&:hover\": {\r\n      backgroundColor: teal[300],\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Register() {\r\n  const classes = useStyles();\r\n  const [firstname, setFirstname] = useState(\"\");\r\n  const [lastname, setLastname] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [password2, setPassword2] = useState(\"\");\r\n  const [{ user }, dispatch] = useStateValue();\r\n  const [errorMessages, setErrorMessages] = useState({});\r\n  const errors = [];\r\n\r\n  const history = useHistory();\r\n\r\n  const signUp = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Reset the list of error messages\r\n    setErrorMessages([]);\r\n\r\n    //   Check validity of the input\r\n    const { errors, isValid } = validateInput(\r\n      { firstname, lastname, email, password, password2 },\r\n      \"register\"\r\n    );\r\n\r\n    if (isValid) {\r\n      // Create object to post to new registration\r\n      const newUser = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        email: email,\r\n        password: password,\r\n        password2: password2,\r\n      };\r\n      // Method post to push data to server side\r\n      axios\r\n        .post(\"/users/register\", newUser)\r\n        .then((response) => {\r\n          // if new user succesfully connected, add the new user as the user in localStorage context API\r\n          if (response) {\r\n            // Push to local storage\r\n            console.log(\"New user registered >>> \");\r\n            console.log(response.data);\r\n            dispatch({\r\n              type: \"SET_USER\",\r\n              user: {\r\n                firstname: response.data.firstname,\r\n                lastname: response.data.lastname,\r\n                email: response.data.email,\r\n                userId: \"random_value\",\r\n              },\r\n            });\r\n            history.push(\"/whatsapp-clone/loading\");\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          if (error.response) {\r\n            setErrorMessages({\r\n              serverError: error.response.data.errors.knownUser,\r\n            });\r\n          } else {\r\n            setErrorMessages({\r\n              serverError:\r\n                \"Connection failed: The service is temporarily unavailable. Please try again later\",\r\n            });\r\n          }\r\n        });\r\n    } else {\r\n      console.log(\">>> Error Sign Up : check credentials\");\r\n      setErrorMessages(errors);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={styles.login}>\r\n      <form className={styles.login__form}>\r\n        <Link to=\"/whatsapp-clone/login\" className={classes.logoPositionLeft}>\r\n          <IconButton>\r\n            <ArrowBackIcon className={classes.logo2} />\r\n          </IconButton>\r\n        </Link>\r\n\r\n        <p className={styles.login__elementPosition}> Sign Up </p>\r\n\r\n        <p\r\n          hidden={errorMessages?.serverError ? false : true}\r\n          className={`${styles.login__elementPosition} ${styles.login__errorMessage}`}\r\n        >\r\n          <ErrorIcon />\r\n          {errorMessages?.serverError}\r\n        </p>\r\n\r\n        <TextField\r\n          error={errorMessages?.firstname ? true : false}\r\n          helperText={errorMessages?.firstname}\r\n          className={styles.login__elementPosition}\r\n          label=\"First name\"\r\n          variant=\"outlined\"\r\n          value={firstname}\r\n          onChange={(e) => setFirstname(e.target.value)}\r\n        />\r\n        <TextField\r\n          error={errorMessages?.lastname ? true : false}\r\n          helperText={errorMessages?.lastname}\r\n          className={styles.login__elementPosition}\r\n          label=\"Last name\"\r\n          variant=\"outlined\"\r\n          value={lastname}\r\n          onChange={(e) => setLastname(e.target.value)}\r\n        />\r\n        <TextField\r\n          error={errorMessages?.email ? true : false}\r\n          helperText={errorMessages?.email}\r\n          className={styles.login__elementPosition}\r\n          label=\"Email\"\r\n          variant=\"outlined\"\r\n          value={email}\r\n          type=\"email\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <TextField\r\n          error={errorMessages?.password ? true : false}\r\n          helperText={errorMessages?.password}\r\n          className={styles.login__elementPosition}\r\n          label=\"Password\"\r\n          variant=\"outlined\"\r\n          value={password}\r\n          type=\"password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <TextField\r\n          error={errorMessages?.password2 ? true : false}\r\n          helperText={errorMessages?.password2}\r\n          className={styles.login__elementPosition}\r\n          label=\"Confirm Password\"\r\n          variant=\"outlined\"\r\n          value={password2}\r\n          type=\"password\"\r\n          onChange={(e) => setPassword2(e.target.value)}\r\n        />\r\n        <Button\r\n          className={`${styles.login__elementPosition} ${classes.register__signupButton}`}\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          onClick={(e) => signUp(e)}\r\n        >\r\n          Sign Up\r\n        </Button>\r\n      </form>\r\n      <h1 className={styles.login__title}>What's app Clone</h1>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React, { useEffect } from \"react\";\r\nimport { useStateValue } from \"./context/stateProvider\";\r\nimport isEmpty from \"is-empty\";\r\nimport Pusher from \"pusher-js\";\r\nimport axios from \"./axios\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport styles from \"./Loading.module.css\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { teal } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  iconPosition: {\r\n    justifySelf: \"center\",\r\n    alignSelf: \"center\",\r\n  },\r\n  circularProgress: {\r\n    color: \"white\",\r\n    [theme.breakpoints.down(768)]: {\r\n      width: 40,\r\n      height: 40,\r\n    },\r\n    [theme.breakpoints.up(768)]: {\r\n      width: 100,\r\n      height: 100,\r\n    },\r\n  },\r\n}));\r\n\r\nfunction Loading() {\r\n  //Declare constants\r\n  const classes = useStyles();\r\n  const [\r\n    { user, currentConversation, conversations },\r\n    dispatch,\r\n  ] = useStateValue();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const getChatterInfo = async (conversation) => {\r\n    let chatterEmail = null;\r\n    let interlocutor = {};\r\n\r\n    for (let email of conversation.chatters) {\r\n      if (email !== user.email) {\r\n        chatterEmail = email;\r\n      }\r\n    }\r\n    // get chatterEmail' information\r\n    const response = await axios.get(\"/users/user\", {\r\n      params: { email: chatterEmail },\r\n    });\r\n\r\n    await setTimeout(() => {\r\n      interlocutor.firstname = response.data.firstname;\r\n      interlocutor.lastname = response.data.lastname;\r\n      interlocutor.email = response.data.email;\r\n      console.log(\"done\");\r\n    }, 250);\r\n\r\n    return interlocutor;\r\n  };\r\n\r\n  useEffect(() => {\r\n    // If a user is not logged in\r\n    if (!user) {\r\n      if (location.pathname !== \"/whatsapp-clone/new-account\") {\r\n        history.replace(\"/whatsapp-clone/login\");\r\n      }\r\n    } else {\r\n      console.log(\"User = \");\r\n      console.log(user);\r\n      // 1. Synchronize with the list of contacts\r\n      const syncContacts = async () => {\r\n        await axios.get(\"/users/sync\").then((response) => {\r\n          const contacts_list = [];\r\n          for (let contact of response.data) {\r\n            if (contact.email !== user.email) {\r\n              contacts_list.push(contact);\r\n            }\r\n          }\r\n          dispatch({\r\n            type: \"SET_CONTACTS\",\r\n            contacts: contacts_list,\r\n          });\r\n          console.log(\"Done: Sync Contacts List\");\r\n          console.log(response.data);\r\n        });\r\n      };\r\n      syncContacts();\r\n\r\n      // 2. Synchronize with the list of conversation associated to the user\r\n      const syncConversations = async () => {\r\n        await axios.post(\"/conversations/sync\", user).then((response) => {\r\n          if (response.data) {\r\n            dispatch({\r\n              type: \"SET_CONVERSATIONS_LIST\",\r\n              convs: response.data,\r\n            });\r\n            // 4. Define the first conversation in the list as the currentConversation (wait 1.5 sec)\r\n            if (isEmpty(currentConversation)) {\r\n              dispatch({\r\n                type: \"SET_CURRENT_CONVERSATION\",\r\n                currentConv: response.data[0],\r\n              });\r\n            }\r\n            console.log(\"Done: Sync ConversationsList\");\r\n            console.log(response.data);\r\n          }\r\n        });\r\n      };\r\n      syncConversations();\r\n    }\r\n  }, []);\r\n\r\n  // Use Effect that subscribe to Pusher to get notified\r\n  ///when a new message have been sent from a user\r\n  useEffect(() => {\r\n    // Pusher.logToConsole = true;\r\n\r\n    const pusher = new Pusher(\"3678c5b88461dcff7cb9\", { cluster: \"eu\" });\r\n\r\n    const messageChannel = pusher.subscribe(\"messages\");\r\n    messageChannel.bind(\"updated\", (data) => {\r\n      console.log(data);\r\n      dispatch({\r\n        type: \"ADD_NEW_MESSAGE\",\r\n        data: data,\r\n      });\r\n\r\n      // setMessages([...messages, data]);\r\n    });\r\n\r\n    // Return to clean up the subscription\r\n    return () => {\r\n      messageChannel.unbind_all();\r\n      messageChannel.unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      history.replace(\"/whatsapp-clone/conversations\");\r\n    }, 3000);\r\n    return () => {};\r\n  }, []);\r\n\r\n  return (\r\n    <div className={classes.iconPosition}>\r\n      <CircularProgress className={classes.circularProgress} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Chat from \"./Chat\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport { useStateValue } from \"./context/stateProvider\";\r\n\r\n// Material UI + styling\r\nimport styles from \"./MainWindow.module.css\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\n\r\n/////////////////////////////\r\n\r\nfunction MainWindow() {\r\n  const [{ displaySideBar }, dispatch] = useStateValue();\r\n\r\n  // Keep track of window innerWidth\r\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n  useEffect(() => {\r\n    // Handler to call on window resize\r\n    function handleResizeWidth() {\r\n      // Set window widthto state\r\n      setWindowWidth(window.innerWidth);\r\n    }\r\n    // Add event listener\r\n    window.addEventListener(\"resize\", handleResizeWidth);\r\n\r\n    // Remove event listener on cleanup\r\n    return () => window.removeEventListener(\"resize\", handleResizeWidth);\r\n  });\r\n\r\n  return (\r\n    <div className={styles.app__body}>\r\n      {windowWidth < 768 ? (\r\n        <Drawer anchor=\"left\" open={displaySideBar}>\r\n          <Sidebar />\r\n        </Drawer>\r\n      ) : (\r\n        <Sidebar />\r\n      )}\r\n\r\n      <Chat />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MainWindow;\r\n","import React, { useEffect, useState } from \"react\";\n\nimport \"./App.css\";\nimport Chat from \"./Chat\";\nimport Sidebar from \"./Sidebar\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport Loading from \"./Loading\";\nimport MainWindow from \"./MainWindow\";\nimport \"./App.css\";\nimport Drawer from \"@material-ui/core/Drawer\";\n\nimport Pusher from \"pusher-js\";\nimport { useStateValue } from \"./context/stateProvider\";\n\nimport { Route, Switch, Redirect } from \"react-router-dom\";\n\nfunction App() {\n  const [{ conversations, displaySideBar, user }, dispatch] = useStateValue();\n\n  // Use Effect that subscribe to Pusher to get notified\n  //when a new message have been sent from a user\n  useEffect(() => {\n    // Pusher.logToConsole = true;\n\n    const pusher = new Pusher(\"3678c5b88461dcff7cb9\", { cluster: \"eu\" });\n\n    const messageChannel = pusher.subscribe(\"messages\");\n    messageChannel.bind(\"updated\", (data) => {\n      // console.log(\"youhou\");\n      // console.log(data);\n      dispatch({\n        type: \"ADD_NEW_MESSAGE\",\n        data: data,\n      });\n\n      // setMessages([...messages, data]);\n    });\n\n    // Return to clean up the subscription\n    return () => {\n      messageChannel.unbind_all();\n      messageChannel.unsubscribe();\n    };\n  }, []);\n\n  //  keep track of the window innerwidth\n\n  return (\n    <div className=\"app\">\n      <Switch>\n        <Route path=\"/whatsapp-clone/login\">\n          <Login />\n        </Route>\n        <Route path=\"/whatsapp-clone/new-account\">\n          <Register />\n        </Route>\n        <Route path=\"/whatsapp-clone/loading\">\n          <Loading />\n        </Route>\n        {user ? (\n          <Route path=\"/whatsapp-clone/conversations\">\n            {/* <div className=\"app-body\">\n              <Drawer anchor=\"left\" open={displaySideBar}>\n                <Sidebar />\n              </Drawer>\n              <Chat />\n            </div> */}\n            <MainWindow />\n          </Route>\n        ) : (\n          <Redirect to=\"/whatsapp-clone/login\" />\n        )}\n        {/* <Route path=\"/whatsapp-clone/conversations\">\n          <div className=\"app-body\">\n            <Drawer anchor=\"left\" open={displaySideBar}>\n              <Sidebar />\n            </Drawer>\n            <Chat />\n          </div>\n        </Route> */}\n\n        <Route path=\"/\">\n          <Login />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import isEmpty from \"is-empty\";\r\n\r\nexport const initialState = {\r\n  user: null,\r\n  conversations: [],\r\n  sideSection: \"conversations\",\r\n  contacts: [],\r\n  currentConversation: {},\r\n  displaySideBar: false,\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n    case \"SET_SIDEBAR_SECTION\":\r\n      return {\r\n        ...state,\r\n        sideSection: action.sideSection,\r\n      };\r\n    case \"SET_CONTACTS\":\r\n      return {\r\n        ...state,\r\n        contacts: action.contacts,\r\n      };\r\n    case \"SET_CURRENT_CONVERSATION\":\r\n      return {\r\n        ...state,\r\n        currentConversation: action.currentConv,\r\n      };\r\n    case \"ADD_CONVERSATION\":\r\n      return {\r\n        ...state,\r\n        conversations: [...state.conversations, action.conversation],\r\n      };\r\n    case \"SET_CONVERSATIONS_LIST\":\r\n      return {\r\n        ...state,\r\n        conversations: action.convs,\r\n      };\r\n\r\n    case \"ADD_NEW_MESSAGE\":\r\n      for (let i = 0; i < state.conversations.length; i++) {\r\n        if (\r\n          String(action.data.conversationId) ===\r\n          String(state.conversations[i]._id)\r\n        ) {\r\n          state.conversations[i].messages.push(action.data.message);\r\n          return {\r\n            ...state,\r\n          };\r\n        }\r\n      }\r\n      break;\r\n    case \"DISPLAY_SIDEBAR\":\r\n      return {\r\n        ...state,\r\n        displaySideBar: !state.displaySideBar,\r\n      };\r\n      break;\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { StateProvider } from \"./context/stateProvider\";\nimport reducer, { initialState } from \"./context/reducer\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <Router>\n        <App />\n      </Router>\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar__mainContent\":\"SidebarConversationSection_sidebar__mainContent__3f0Iq\",\"sidebar__left\":\"SidebarConversationSection_sidebar__left__3dOap\",\"sidebar__username\":\"SidebarConversationSection_sidebar__username__2F3mX\",\"sidebar__navbar\":\"SidebarConversationSection_sidebar__navbar__33nIS\",\"sidebar__searchbar\":\"SidebarConversationSection_sidebar__searchbar__1sVga\",\"sidebar__search\":\"SidebarConversationSection_sidebar__search__2jN3M\",\"sidebar__searchIcon\":\"SidebarConversationSection_sidebar__searchIcon__1R45K\",\"sidebar__listContainer\":\"SidebarConversationSection_sidebar__listContainer__3sT8Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebarConversation\":\"SidebarConversation_sidebarConversation__28NEe\",\"sidebarConversation__selected\":\"SidebarConversation_sidebarConversation__selected__3icnK\",\"sidebarConversation__name\":\"SidebarConversation_sidebarConversation__name__sGyfp\",\"sidebarConversation__lastMessage\":\"SidebarConversation_sidebarConversation__lastMessage__1-Xag\",\"sidebarConversation__date\":\"SidebarConversation_sidebarConversation__date__3KM1S\",\"sidebarConversation__isCurrent\":\"SidebarConversation_sidebarConversation__isCurrent__3CTNk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar__mainContent\":\"SidebarNewConversationSection_sidebar__mainContent__3mEAg\",\"sidebar__navbar\":\"SidebarNewConversationSection_sidebar__navbar__2wNiE\",\"sidebar__title\":\"SidebarNewConversationSection_sidebar__title__1KWah\",\"sidebar__searchbar\":\"SidebarNewConversationSection_sidebar__searchbar__1KkWR\",\"sidebar__search\":\"SidebarNewConversationSection_sidebar__search__3jizx\",\"sidebar__searchIcon\":\"SidebarNewConversationSection_sidebar__searchIcon__13MQR\",\"sidebar__listContainer\":\"SidebarNewConversationSection_sidebar__listContainer__2QnyX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newContactList\":\"NewContactList_newContactList__3l80y\",\"newContactList__listContacts\":\"NewContactList_newContactList__listContacts__2qxLH\",\"newContactList__item\":\"NewContactList_newContactList__item__3i2SW\",\"title\":\"NewContactList_title__2KKn7\",\"newContactList__title\":\"NewContactList_newContactList__title__1sqNT\",\"newContactList__title2\":\"NewContactList_newContactList__title2__3b1BJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newContact\":\"NewContact_newContact__3dNVM\",\"newContact__name\":\"NewContact_newContact__name__iHGOP\"};"],"sourceRoot":""}