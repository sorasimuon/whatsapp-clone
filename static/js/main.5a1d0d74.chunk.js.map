{"version":3,"sources":["NewContact.module.css","context/stateProvider.js","axios.js","Typingbar.js","Message.js","Chat.js","SidebarConversation.js","SidebarConversationSection.js","NewContact.js","NewContactList.js","SidebarNewConversationSection.js","Sidebar.js","utilities/validator.js","Login.js","Register.js","App.js","reportWebVitals.js","context/reducer.js","index.js","SidebarConversationSection.module.css","SidebarNewConversationSection.module.css","NewContactList.module.css"],"names":["module","exports","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","instance","axios","create","baseURL","useStyles","makeStyles","theme","iconButton","fontSize","fontWeight","color","grey","inputInput","backgroundColor","borderRadius","width","height","Typingbar","user","useState","textMessage","settextMessage","classes","sendMessage","e","a","preventDefault","newMessage","message","firstname","email","post","then","res","console","log","data","Date","timestamp","toLocaleTimeString","className","IconButton","onSubmit","InputBase","placeholder","inputProps","onChange","target","Message","messageName","messageContent","messageTimestamp","messageReceiver","avatar","palette","getContrastText","deepOrange","marginRight","Chat","messages","currentConversation","chatterInfo","isEmpty","lastname","chatterEmail","chatters","get","params","response","catch","err","getChatterInfo","Avatar","src","map","uuidv4","SidebarConversation","conversation","date","now","weekday","Array","getDay","translateDate","setFirstname","setLastname","setEmail","useEffect","Divider","light","variant","orange","searchIcon","addIcon","margin","SidebarConversationSection","conversations","contacts","dispatch","styles","sidebar__mainContent","sidebar__navbar","sidebar__left","sidebar__username","sidebar__right","onClick","type","sideSection","sidebar__searchbar","sidebar__search","sidebar__searchIcon","sidebar__listContainer","NewContact","contact","createNewChat","activated","newContact","newGroupButton","padding","NewContactList","newContactList","newContactList__item","newContactList__title","newContactList__listContacts","title","newContactList__title2","backButton","marginButton","SidebarNewConversationSection","sidebar__title","Sidebar","validateInput","checktype","password","password2","errors","Validator","push","isEmail","isusername","isValid","logo","textField","marginBottom","button","Login","setPassword","errorMessages","setErrorMessages","setUser","useHistory","userId","signIn","credentials","error","errorMessage","TextField","label","Button","href","Register","setPassword2","history","register","newUser","k","App","setMessages","location","useLocation","pathname","replace","contacts_list","convs","currentConv","setTimeout","messageChannel","Pusher","cluster","subscribe","bind","unbind_all","unsubscribe","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","state","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5a1d0d74.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"newContact\":\"NewContact_newContact__3dNVM\"};","import react, { createContext, useContext, useReducer } from \"react\";\r\n\r\n// Prepare the dataLayer ( also named store)\r\n// Equivalent to createStore in Redux\r\nexport const StateContext = createContext();\r\n\r\n//Wrap our app and provide the data layer\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  // baseURL: \"http://localhost:9000\",\r\n  baseURL: \"https://whatsapp-bck.herokuapp.com/\",\r\n});\r\n\r\nexport default instance;\r\n","import React, { useState } from \"react\";\r\nimport { useStateValue } from \"./context/stateProvider\";\r\nimport \"./Typingbar.css\";\r\n\r\n// Material-UI\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\r\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport MicNoneIcon from \"@material-ui/icons/MicNone\";\r\nimport axios from \"./axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  iconButton: {\r\n    fontSize: 30,\r\n    fontWeight: 200,\r\n    color: grey[600],\r\n  },\r\n  inputInput: {\r\n    backgroundColor: \"rgba(255,255,255,0.5)\",\r\n    borderRadius: \"20px\",\r\n    color: \"rgb(100,100,100)\",\r\n    width: \"100%\",\r\n    height: 40,\r\n  },\r\n}));\r\n\r\nfunction Typingbar() {\r\n  const [{ user }, dispatch] = useStateValue();\r\n  const [textMessage, settextMessage] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Create Message object\r\n    const newMessage = {\r\n      message: textMessage,\r\n      firstname: user.firstname,\r\n      email: user.email,\r\n    };\r\n\r\n    const req = await axios\r\n      .post(\"/api/v1/messages/new-message\", newMessage)\r\n      .then((res) => {\r\n        console.log(\r\n          `Sent new message from ${res.data.firstname} at ${new Date(\r\n            res.data.timestamp\r\n          ).toLocaleTimeString()} >> ${res.data.message}`\r\n        );\r\n        // console.log(res);\r\n        // Reset the Input to <empty>\r\n        settextMessage(\"\");\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"typingbar\">\r\n      <IconButton>\r\n        <InsertEmoticonIcon className={classes.iconButton} />\r\n      </IconButton>\r\n      <IconButton>\r\n        <AttachFileIcon className={classes.iconButton} />\r\n      </IconButton>\r\n\r\n      <div className=\"typing-search\">\r\n        <form onSubmit={(e) => sendMessage(e)}>\r\n          <InputBase\r\n            placeholder=\"Type text\"\r\n            className={classes.inputInput}\r\n            inputProps={{ \"aria-label\": \"search\" }}\r\n            onChange={(e) => settextMessage(e.target.value)}\r\n            value={textMessage}\r\n          />\r\n        </form>\r\n      </div>\r\n\r\n      <IconButton>\r\n        {textMessage ? (\r\n          <SendOutlinedIcon className={classes.iconButton} />\r\n        ) : (\r\n          <MicNoneIcon className={classes.iconButton} />\r\n        )}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Typingbar;\r\n","import React from \"react\";\r\nimport \"./Message.css\";\r\n\r\nfunction Message({\r\n  messageName,\r\n  messageContent,\r\n  messageTimestamp,\r\n  messageReceiver = false,\r\n}) {\r\n  return (\r\n    <div className={`message ${messageReceiver ? \"message-receiver\" : \"\"}`}>\r\n      <span className=\"message-name\">{messageName}</span>\r\n      <span className=\"message-content\">{messageContent}</span>\r\n      <span className=\"message-timestamp\">{messageTimestamp}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React, { useState } from \"react\";\r\nimport { useStateValue } from \"./context/stateProvider\";\r\nimport axios from \"./axios\";\r\nimport isEmpty from \"is-empty\";\r\n\r\nimport \"./Chat.css\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { deepOrange } from \"@material-ui/core/colors\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport Typingbar from \"./Typingbar\";\r\nimport Message from \"./Message\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatar: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n    height: \"40px\",\r\n    width: \"40px\",\r\n    marginRight: 20,\r\n  },\r\n}));\r\n\r\nfunction Chat({ messages }) {\r\n  const classes = useStyles();\r\n  const [{ user, currentConversation }, dispatch] = useStateValue();\r\n\r\n  // find the information of the interlocutor\r\n  const getChatterInfo = async () => {\r\n    if (isEmpty(currentConversation)) {\r\n      console.log(\"marche pas\");\r\n      console.log(user);\r\n      return {\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        email: \"\",\r\n      };\r\n    } else {\r\n      let chatterEmail = null;\r\n      for (let email of currentConversation.chatters) {\r\n        if (email !== user.email) {\r\n          chatterEmail = email;\r\n        }\r\n      }\r\n      // get chatterEmail' information\r\n      await axios\r\n        .get(\"/users/user\", { params: { email: chatterEmail } })\r\n        .then((response) => {\r\n          return response.data;\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"did not find data regarding the interlocutor in DB\");\r\n          console.log(err.response.data);\r\n        });\r\n    }\r\n  };\r\n\r\n  const chatterInfo = getChatterInfo();\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      {/* Chat Bar */}\r\n      <div className=\"chatbar-navbar\">\r\n        <div className=\"chatbar-left\">\r\n          <Avatar\r\n            className={classes.avatar}\r\n            src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSkcSGx-KlYubrDTQtCaFWZ3pBI3CJOxWwUHw&usqp=CAU\"\r\n          >\r\n            S\r\n          </Avatar>\r\n          <div className=\"chatbar-title\">\r\n            <label className=\"chatbar-name\">\r\n              {chatterInfo.firstname} {chatterInfo.lastname}\r\n            </label>\r\n            <label className=\"chatbar-status\">Online</label>\r\n          </div>\r\n        </div>\r\n        <div className=\"chatbar-right\">\r\n          <IconButton>\r\n            <SearchIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreHorizIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Conversation area */}\r\n      <div className=\"chat-body\">\r\n        {messages.map((message) => {\r\n          // const currentDate = new Date(message.timestamp);\r\n\r\n          // // determine the date to display in bubble representing the date\r\n          // displayDate(currentDate);\r\n\r\n          // Recall the previous date message in order to\r\n          return (\r\n            <div key={uuidv4()}>\r\n              {/* <div className=\"date\">\r\n                <span>{messageToDisplay}</span>\r\n              </div> */}\r\n              <Message\r\n                key={uuidv4()}\r\n                messageName={message.firstname}\r\n                messageContent={message.message}\r\n                messageTimestamp={new Date(\r\n                  message.timestamp\r\n                ).toLocaleTimeString()}\r\n                messageReceiver={user.email === message.email ? true : false}\r\n              />\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n      <Typingbar />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useStateValue } from \"./context/stateProvider\";\r\nimport axios from \"./axios\";\r\n\r\nimport \"./SidebarConversation.css\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport { makeStyles, rgbToHex } from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatar: {\r\n    height: \"60px\",\r\n    width: \"60px\",\r\n  },\r\n}));\r\n\r\nconst translateDate = (date) => {\r\n  let now = new Date();\r\n  const weekday = new Array(7);\r\n  let result;\r\n  weekday[0] = \"Sunday\";\r\n  weekday[1] = \"Monday\";\r\n  weekday[2] = \"Tuesday\";\r\n  weekday[3] = \"Wednesday\";\r\n  weekday[4] = \"Thursday\";\r\n  weekday[5] = \"Friday\";\r\n  weekday[6] = \"Saturday\";\r\n\r\n  result = weekday[now.getDay()];\r\n  return result;\r\n};\r\n\r\nfunction SidebarConversation({ conversation }) {\r\n  const classes = useStyles();\r\n  const date = translateDate(Date.now());\r\n  const [{ messages, user, currentConversation }, dispatch] = useStateValue();\r\n  const [firstname, setFirstname] = useState(\"\");\r\n  const [lastname, setLastname] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  // find the information of the interlocutor\r\n  const getChatterInfo = async () => {\r\n    if (!conversation) {\r\n      console.log(\"marche pas\");\r\n    } else {\r\n      let chatterEmail = null;\r\n      for (let email of conversation.chatters) {\r\n        if (email !== user.email) {\r\n          chatterEmail = email;\r\n        }\r\n      }\r\n      // console.log(\"chatterEmail >>> \" + chatterEmail);\r\n      // get chatterEmail' information\r\n      await axios\r\n        .get(\"/users/user\", { params: { email: chatterEmail } })\r\n        .then((response) => {\r\n          // console.log(\"Works !!!\");\r\n          // console.log(response.data);\r\n          setFirstname(response.data.firstname);\r\n          setLastname(response.data.lastname);\r\n          setEmail(response.data.email);\r\n        })\r\n        .catch((err) => {\r\n          console.log(\"did not find data regarding the interlocutor in DB\");\r\n          console.log(err.response.data);\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // console.log(\"currentConversation\");\r\n    // console.log(currentConversation);\r\n    const chatterInfo = getChatterInfo();\r\n  }, [currentConversation]);\r\n\r\n  return (\r\n    <div className=\"sidebarConversation\">\r\n      <div className=\"sidebarConversation-avatar\">\r\n        <Avatar className={classes.avatar} width=\"40px\" height=\"40px\">\r\n          <GroupIcon />\r\n        </Avatar>\r\n      </div>\r\n      <div className=\"sidebarConversation-content\">\r\n        <div className=\"sidebarConversation-title\">\r\n          <label className=\"sidebarConversation-name\">\r\n            {firstname} {lastname}\r\n          </label>\r\n          <label className=\"sidebarConversation-date\">{date}</label>\r\n        </div>\r\n        <div className=\"sidebarConversation-conversation\">\r\n          <label className=\"sidebarConversation-conv\">Hello</label>\r\n        </div>\r\n        <Divider light variant=\"fullWidth\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarConversation;\r\n","// Section where is diaplayed the list of conversation engaged by the signed in user\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useStateValue } from \"./context/stateProvider\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport \"./SidebarConversationSection.module.css\";\r\nimport styles from \"./SidebarConversationSection.module.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport MoreVert from \"@material-ui/icons/MoreVert\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { deepOrange } from \"@material-ui/core/colors\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport SidebarConversation from \"./SidebarConversation\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  orange: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[500],\r\n  },\r\n  inputInput: {\r\n    backgroundColor: \"rgba(255,255,255,0.5)\",\r\n    borderRadius: \"20px\",\r\n    width: \"80%\",\r\n    color: \"rgb(150,150,150)\",\r\n  },\r\n  searchIcon: {\r\n    fontSize: 20,\r\n  },\r\n  addIcon: {\r\n    fontSize: 30,\r\n  },\r\n  margin: {\r\n    margin: 5,\r\n  },\r\n}));\r\n\r\nfunction SidebarConversationSection() {\r\n  const classes = useStyles();\r\n  const [{ user, contacts, conversations }, dispatch] = useStateValue();\r\n\r\n  return (\r\n    <div className={styles.sidebar__mainContent}>\r\n      <div className={styles.sidebar__navbar}>\r\n        <div className={styles.sidebar__left}>\r\n          <Avatar\r\n            className={`${classes.orange} ${classes.margin}`}\r\n            src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSkcSGx-KlYubrDTQtCaFWZ3pBI3CJOxWwUHw&usqp=CAU\"\r\n          >\r\n            S\r\n          </Avatar>\r\n          <p className={`${styles.sidebar__username} ${classes.margin}`}>\r\n            {user?.firstname}\r\n          </p>\r\n        </div>\r\n        <div className={styles.sidebar__right}>\r\n          <IconButton>\r\n            <DonutLargeIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            onClick={(e) =>\r\n              dispatch({\r\n                type: \"SET_SIDEBAR_SECTION\",\r\n                sideSection: \"new-conversation\",\r\n              })\r\n            }\r\n          >\r\n            <AddIcon className={classes.addIcon} />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreVert />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className={styles.sidebar__searchbar}>\r\n        <div className={styles.sidebar__search}>\r\n          <div className={styles.sidebar__searchIcon}>\r\n            <SearchIcon className={classes.searchIcon} />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search or start a new chat\"\r\n            className={classes.inputInput}\r\n            inputProps={{ \"aria-label\": \"search\" }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className={styles.sidebar__listContainer}>\r\n        {conversations.map((conversation) => (\r\n          <SidebarConversation key={uuidv4()} conversation={conversation} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarConversationSection;\r\n","import React from \"react\";\r\nimport axios from \"./axios\";\r\nimport { useStateValue } from \"./context/stateProvider\";\r\n\r\nimport styles from \"./NewContact.module.css\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { deepOrange } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatar: {\r\n    height: 40,\r\n    width: 40,\r\n    marginRight: 10,\r\n    backgroundColor: deepOrange[600],\r\n  },\r\n}));\r\n\r\nfunction NewContact({ contact }) {\r\n  const classes = useStyles();\r\n  const [{ user, currentConversation }, dispatch] = useStateValue();\r\n\r\n  const createNewChat = async () => {\r\n    // e.preventDefault();\r\n\r\n    await axios\r\n      .post(\"conversations/new-chat\", { chatters: [user.email, contact.email] })\r\n      .then((res) => {\r\n        console.log(res);\r\n        console.log(\r\n          \"Created new chat between\" +\r\n            res.data.chatters[0] +\r\n            \" and\" +\r\n            res.data.chatters[1] +\r\n            \" : activated => \" +\r\n            res.data.activated\r\n        );\r\n        dispatch({\r\n          type: \"SET_CURRENT_CONVERSATION\",\r\n          currentConversation: {\r\n            chatters: res.data.chatters,\r\n            activated: res.data.activated,\r\n          },\r\n        });\r\n        dispatch({\r\n          type: \"ADD_CONVERSATION\",\r\n          conversation: {\r\n            chatters: res.data.chatters,\r\n            activated: res.data.activated,\r\n          },\r\n        });\r\n        dispatch({\r\n          type: \"SET_SIDEBAR_SECTION\",\r\n          sideSection: \"conversations\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.newContact} onClick={(e) => createNewChat()}>\r\n        <Avatar\r\n          className={classes.avatar}\r\n          //   src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSkcSGx-KlYubrDTQtCaFWZ3pBI3CJOxWwUHw&usqp=CAU\"\r\n        >\r\n          {contact.firstname[0]}\r\n        </Avatar>\r\n        <label>\r\n          {contact.firstname} {contact.lastname}\r\n        </label>\r\n      </div>\r\n      <Divider light variant=\"fullWidth\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewContact;\r\n","import React from \"react\";\r\nimport { useStateValue } from \"./context/stateProvider\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport styles from \"./NewContactList.module.css\";\r\nimport { makeStyles, withTheme } from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\r\nimport NewContact from \"./NewContact\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  newGroupButton: {\r\n    borderRadius: \"50%\",\r\n    backgroundColor: \"#007868\",\r\n    color: \"white\",\r\n    width: 30,\r\n    height: 30,\r\n    padding: 10,\r\n    marginRight: 10,\r\n  },\r\n}));\r\n\r\nfunction NewContactList() {\r\n  const classes = useStyles();\r\n\r\n  const [{ sideSection, contacts }, dispatch] = useStateValue();\r\n  // console.log(\"CONTACTS LIST >> \");\r\n  // console.log(contacts);\r\n\r\n  return (\r\n    <div className={styles.newContactList}>\r\n      <div\r\n        className={styles.newContactList__item}\r\n        onClick={(e) =>\r\n          dispatch({ type: \"SET_SIDEBAR_SECTION\", sideSection: \"new_group\" })\r\n        }\r\n      >\r\n        <GroupAddIcon className={classes.newGroupButton} />\r\n\r\n        <label className={styles.newContactList__title}>NEW GROUP</label>\r\n      </div>\r\n      <Divider light variant=\"fullWidth\" />\r\n      <div className={styles.newContactList__listContacts}>\r\n        <div className={`${styles.title}`}>\r\n          <label className={styles.newContactList__title2}>\r\n            FREQUENTLY CONTACTED\r\n          </label>\r\n        </div>\r\n        <Divider light variant=\"fullWidth\" />\r\n        {contacts.map((contact) => (\r\n          <NewContact key={uuidv4()} contact={contact} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewContactList;\r\n","import React from \"react\";\r\nimport { useStateValue } from \"./context/stateProvider\";\r\nimport NewContactList from \"./NewContactList\";\r\n\r\nimport styles from \"./SidebarNewConversationSection.module.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles({\r\n  backButton: {\r\n    color: \"white\",\r\n    fontSize: 35,\r\n  },\r\n  marginButton: {\r\n    marginRight: 10,\r\n  },\r\n});\r\n\r\nfunction SidebarNewConversationSection() {\r\n  const classes = useStyles();\r\n  const [{}, dispatch] = useStateValue();\r\n  return (\r\n    <div className={styles.sidebar__mainContent}>\r\n      {/* Header */}\r\n      <div className={styles.sidebar__navbar}>\r\n        <IconButton\r\n          className={classes.marginButton}\r\n          onClick={(e) =>\r\n            dispatch({\r\n              type: \"SET_SIDEBAR_SECTION\",\r\n              sideSection: \"conversations\",\r\n            })\r\n          }\r\n        >\r\n          <ArrowBackIcon className={classes.backButton} />\r\n        </IconButton>\r\n        <p className={styles.sidebar__title}>New Chat</p>\r\n      </div>\r\n      {/* Search Bar */}\r\n      <div className={styles.sidebar__searchbar}>\r\n        <div className={styles.sidebar__search}>\r\n          <div className={styles.sidebar__searchIcon}>\r\n            <SearchIcon className={classes.searchIcon} />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search or start a new chat\"\r\n            className={classes.inputInput}\r\n            inputProps={{ \"aria-label\": \"search\" }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={styles.sidebar__listContainer}>\r\n        <NewContactList />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarNewConversationSection;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useStateValue } from \"./context/stateProvider\";\r\nimport SidebarConversationSection from \"./SidebarConversationSection\";\r\nimport SidebarNewConversationSection from \"./SidebarNewConversationSection\";\r\n\r\nimport \"./Sidebar.css\";\r\n\r\nfunction Sidebar() {\r\n  const [{ user, conversations, sideSection }, dispatch] = useStateValue();\r\n\r\n  // console.log(\"sideSection >>>\", sideSection);\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      {sideSection === \"conversations\" ? <SidebarConversationSection /> : \"\"}\r\n      {sideSection === \"new-conversation\" ? (\r\n        <SidebarNewConversationSection />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport Validator from \"validator\";\r\nimport isEmpty from \"is-empty\";\r\n\r\nconst validateInput = (\r\n  { firstname = \"\", lastname = \"\", email, password, password2 = \"\" },\r\n  checktype\r\n) => {\r\n  let errors = [];\r\n\r\n  switch (checktype) {\r\n    case \"login\":\r\n      //   const { email, password } = input;\r\n      //check email\r\n      if (!Validator.isEmpty(email)) {\r\n        if (!Validator.isEmail(email)) {\r\n          errors.push(\"Error format email\");\r\n        }\r\n      } else {\r\n        errors.push(\"Username is required\");\r\n      }\r\n\r\n      // check Password\r\n      if (Validator.isEmpty(password)) {\r\n        errors.push(\"Password is required\");\r\n      }\r\n\r\n      break;\r\n    case \"register\":\r\n      //   const { firstname, lastname, email, password, password2 } = input;\r\n\r\n      // check firstname\r\n      errors.push(Validator.isEmpty(firstname) ? \"First name is required\" : \"\");\r\n      errors.push(Validator.isEmpty(lastname) ? \"Last name is required\" : \"\");\r\n\r\n      //check email\r\n      if (!Validator.isEmpty(email)) {\r\n        if (!Validator.isusername(email)) {\r\n          errors.push(\"Error format email\");\r\n        }\r\n      } else {\r\n        errors.push(\"email is required\");\r\n      }\r\n\r\n      // check Password\r\n      errors.push(Validator.isEmpty(password) ? \"Password is required\" : \"\");\r\n      errors.push(Validator.isEmpty(password2) ? \"Password2 is required\" : \"\");\r\n      break;\r\n  }\r\n  return {\r\n    errors,\r\n    isValid: isEmpty(errors),\r\n  };\r\n};\r\n\r\nexport default validateInput;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\nimport { useStateValue } from \"./context/stateProvider\";\r\nimport axios from \"./axios\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AlternateEmailIcon from \"@material-ui/icons/AlternateEmail\";\r\nimport validateInput from \"./utilities/validator\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  logo: {\r\n    width: 40,\r\n    height: 40,\r\n  },\r\n  textField: {\r\n    width: \"80%\",\r\n  },\r\n  margin: {\r\n    marginBottom: 20,\r\n  },\r\n  button: {\r\n    width: \"80%\",\r\n  },\r\n}));\r\n\r\nfunction Login() {\r\n  const [{}, dispatch] = useStateValue();\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessages, setErrorMessages] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const setUser = (firstname, lastname, email) => {\r\n    dispatch({\r\n      type: \"SET_USER\",\r\n      user: {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        email: email,\r\n        userId: \"random_value\",\r\n      },\r\n    });\r\n  };\r\n\r\n  const signIn = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Reset the list of error messages\r\n    setErrorMessages([]);\r\n\r\n    //   Check validity of the input\r\n    const { errors, isValid } = validateInput({ email, password }, \"login\");\r\n\r\n    if (isValid) {\r\n      const credentials = {\r\n        email: email,\r\n        password: password,\r\n      };\r\n      console.log(`Connection attempt from ${credentials.email} >>>`);\r\n      console.log(credentials);\r\n      const request = await axios\r\n        .post(\"/users/login\", credentials)\r\n        .then((res) => {\r\n          console.log(res.data);\r\n          console.log(\"Login successful >> \", res.data.data.email);\r\n          // save the user in the data layer/store\r\n          setUser(\r\n            res.data.data.firstname,\r\n            res.data.data.lastname,\r\n            res.data.data.email\r\n          );\r\n          // history.push(\"/whatsapp-clone/conversations\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response.data);\r\n          setErrorMessages([error.response.data]);\r\n          // reset Password and email\r\n          setPassword(\"\");\r\n          setEmail(\"\");\r\n        });\r\n    } else {\r\n      console.log(\">>> Error Sign In : check credentials\");\r\n      setErrorMessages(errors);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <div className=\"login\">\r\n        <IconButton>\r\n          <AlternateEmailIcon className={`${classes.logo} ${classes.margin}`} />\r\n        </IconButton>\r\n\r\n        <p> Sign In </p>\r\n        <ul>\r\n          {errorMessages.map((errorMessage) => (\r\n            <li key={uuidv4()} className=\"errorMessage\">\r\n              {errorMessage}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <TextField\r\n          className={`${classes.textField} ${classes.margin}`}\r\n          label=\"email\"\r\n          variant=\"outlined\"\r\n          value={email}\r\n          type=\"email\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <TextField\r\n          className={`${classes.textField} ${classes.margin}`}\r\n          label=\"password\"\r\n          variant=\"outlined\"\r\n          value={password}\r\n          type=\"password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <Button\r\n          className={`${classes.button} ${classes.margin}`}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          onClick={(e) => signIn(e)}\r\n        >\r\n          Sign In\r\n        </Button>\r\n        <p className={classes.margin}> Or </p>\r\n        <Button\r\n          className={`${classes.button} ${classes.margin}`}\r\n          href=\"/whatsapp-clone/new-account\"\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n        >\r\n          Create new account\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"./axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useStateValue } from \"./context/stateProvider\";\r\nimport \"./Register.css\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport AlternateEmailIcon from \"@material-ui/icons/AlternateEmail\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  logo: {\r\n    width: 40,\r\n    height: 40,\r\n  },\r\n  textField: {\r\n    width: \"80%\",\r\n  },\r\n  margin: {\r\n    marginBottom: 20,\r\n  },\r\n  button: {\r\n    width: \"80%\",\r\n  },\r\n}));\r\n\r\nfunction Register() {\r\n  const classes = useStyles();\r\n  const [firstname, setFirstname] = useState(\"\");\r\n  const [lastname, setLastname] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [password2, setPassword2] = useState(\"\");\r\n  const [{ user }, dispatch] = useStateValue();\r\n  const errors = [];\r\n\r\n  const history = useHistory();\r\n\r\n  const register = async (e) => {\r\n    e.preventDefault();\r\n    // Create object to post to new registration\r\n    const newUser = {\r\n      firstname: firstname,\r\n      lastname: lastname,\r\n      email: email,\r\n      password: password,\r\n      password2: password2,\r\n    };\r\n    // Method post to push data to server side\r\n    axios\r\n      .post(\"/users/register\", newUser)\r\n      .then((response) => {\r\n        // if new user succesfully connected, add the new user as the user in localStorage context API\r\n        if (response) {\r\n          // Push to local storage\r\n          console.log(\"New user registered >>> \");\r\n          console.log(response.data);\r\n          dispatch({\r\n            type: \"SET_USER\",\r\n            user: {\r\n              firstname: response.data.firstname,\r\n              lastname: response.data.lastname,\r\n              email: response.data.email,\r\n              userId: \"random_value\",\r\n            },\r\n          });\r\n          history.push(\"/whatsapp-clone/conversations\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error registering user\");\r\n        console.log(err.response.data);\r\n        for (let k in err.errors) {\r\n          errors.push([err.errors[k]]);\r\n        }\r\n        console.log(errors);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <div className=\"register\">\r\n        <IconButton>\r\n          <AlternateEmailIcon className={classes.logo} />\r\n        </IconButton>\r\n\r\n        <p> New Account </p>\r\n\r\n        <ul>\r\n          {errors.map((errorMessage) => (\r\n            <li>{errorMessage}</li>\r\n          ))}\r\n        </ul>\r\n\r\n        <TextField\r\n          className={`${classes.textField} ${classes.margin}`}\r\n          label=\"First name\"\r\n          variant=\"outlined\"\r\n          value={firstname}\r\n          onChange={(e) => setFirstname(e.target.value)}\r\n        />\r\n        <TextField\r\n          className={`${classes.textField} ${classes.margin}`}\r\n          label=\"Last name\"\r\n          variant=\"outlined\"\r\n          value={lastname}\r\n          onChange={(e) => setLastname(e.target.value)}\r\n        />\r\n        <MoreHorizIcon className={classes.margin} />\r\n        <TextField\r\n          className={`${classes.textField} ${classes.margin}`}\r\n          label=\"Email address\"\r\n          variant=\"outlined\"\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <TextField\r\n          className={`${classes.textField} ${classes.margin}`}\r\n          label=\"Password\"\r\n          variant=\"outlined\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <TextField\r\n          className={`${classes.textField} ${classes.margin}`}\r\n          label=\"Confirm password\"\r\n          variant=\"outlined\"\r\n          type=\"password\"\r\n          value={password2}\r\n          onChange={(e) => setPassword2(e.target.value)}\r\n        />\r\n\r\n        <Button\r\n          className={`${classes.button} ${classes.margin}`}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          onClick={(e) => register(e)}\r\n        >\r\n          Sign Up\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React, { useEffect, useState } from \"react\";\nimport { useStateValue } from \"./context/stateProvider\";\nimport isEmpty from \"is-empty\";\n\nimport \"./App.css\";\nimport Chat from \"./Chat\";\nimport Sidebar from \"./Sidebar\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport \"./App.css\";\nimport Pusher from \"pusher-js\";\nimport axios from \"./axios\";\n\nimport { Route, Switch, useHistory, useLocation } from \"react-router-dom\";\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n  const [\n    { user, currentConversation, conversations, contacts },\n    dispatch,\n  ] = useStateValue();\n  const history = useHistory();\n  const location = useLocation();\n\n  useEffect(async () => {\n    // If a user is not logged in\n    if (!user) {\n      if (location.pathname !== \"/whatsapp-clone/new-account\") {\n        history.replace(\"/whatsapp-clone/login\");\n      }\n    } else {\n      // if a user is logged in\n      // 1. Synchronize messages for all conversations\n      await axios.get(\"/messages/sync\").then((response) => {\n        setMessages(response.data);\n      });\n\n      // 2. Syncrhonize with the list of contacts\n      await axios.get(\"/users/sync\").then((response) => {\n        const contacts_list = [];\n        for (let contact of response.data) {\n          if (contact.email !== user.email) {\n            contacts_list.push(contact);\n          }\n        }\n        dispatch({\n          type: \"SET_CONTACTS\",\n          contacts: contacts_list,\n        });\n      });\n\n      // 3. Synchronize with the list of conversation associated to the user\n      await axios.post(\"/conversations/sync\", user).then((response) => {\n        if (response.data) {\n          dispatch({\n            type: \"SET_CONVERSATIONS_LIST\",\n            convs: response.data,\n          });\n        }\n      });\n\n      // 4. Define the first conversation in the list as the currentConversation (wait 1.5 sec)\n      if (isEmpty(currentConversation) && !isEmpty(conversations)) {\n        dispatch({\n          type: \"SET_CURRENT_CONVERSATION\",\n          currentConv: { chatters: conversations[0].chatters },\n        });\n      }\n\n      // 5. revert to conversations page (wait 1.5sec)\n      setTimeout(() => {\n        history.push(\"/whatsapp-clone/conversations\");\n      }, 1000);\n    }\n  }, [user]);\n\n  useEffect(() => {\n    // Pusher.logToConsole = true;\n\n    const pusher = new Pusher(\"3678c5b88461dcff7cb9\", { cluster: \"eu\" });\n\n    const messageChannel = pusher.subscribe(\"messages\");\n    messageChannel.bind(\"inserted\", (data) => {\n      setMessages([...messages, data]);\n      console.log(data);\n    });\n    // console.log(\"Messages : \", messages);\n\n    // Return to clean up the subscription\n    return () => {\n      messageChannel.unbind_all();\n      messageChannel.unsubscribe();\n    };\n  }, [messages]);\n\n  // useEffect -> When the user select a new contact to dialog with,\n  // it opens a new conversation window with this contact\n  // react when currentConversation is changed\n\n  useEffect(() => {}, [currentConversation]);\n\n  return (\n    <div className=\"app\">\n      <Switch>\n        <Route path=\"/whatsapp-clone/login\">\n          <Login />\n        </Route>\n        <Route path=\"/whatsapp-clone/new-account\">\n          <Register />\n        </Route>\n        <Route path=\"/whatsapp-clone/conversations\">\n          <div className=\"app-body\">\n            <Sidebar />\n            <Chat messages={messages} />\n          </div>\n        </Route>\n        <Route path=\"/\">\n          <Login />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const initialState = {\r\n  user: null,\r\n  conversations: [],\r\n  sideSection: \"conversations\",\r\n  contacts: [],\r\n  currentConversation: {},\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n    case \"SET_SIDEBAR_SECTION\":\r\n      return {\r\n        ...state,\r\n        sideSection: action.sideSection,\r\n      };\r\n    case \"SET_CONTACTS\":\r\n      return {\r\n        ...state,\r\n        contacts: action.contacts,\r\n      };\r\n    case \"SET_CURRENT_CONVERSATION\":\r\n      return {\r\n        ...state,\r\n        currentConversation: action.currentConv,\r\n      };\r\n    case \"ADD_CONVERSATION\":\r\n      return {\r\n        ...state,\r\n        conversations: [...state.conversations, action.conversation],\r\n      };\r\n    case \"SET_CONVERSATIONS_LIST\":\r\n      return {\r\n        ...state,\r\n        conversations: action.convs,\r\n      };\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { StateProvider } from \"./context/stateProvider\";\nimport reducer, { initialState } from \"./context/reducer\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <Router>\n        <App />\n      </Router>\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar__mainContent\":\"SidebarConversationSection_sidebar__mainContent__3f0Iq\",\"sidebar__left\":\"SidebarConversationSection_sidebar__left__3dOap\",\"sidebar__username\":\"SidebarConversationSection_sidebar__username__2F3mX\",\"sidebar__navbar\":\"SidebarConversationSection_sidebar__navbar__33nIS\",\"sidebar__searchbar\":\"SidebarConversationSection_sidebar__searchbar__1sVga\",\"sidebar__search\":\"SidebarConversationSection_sidebar__search__2jN3M\",\"sidebar__searchIcon\":\"SidebarConversationSection_sidebar__searchIcon__1R45K\",\"sidebar__listContainer\":\"SidebarConversationSection_sidebar__listContainer__3sT8Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar__mainContent\":\"SidebarNewConversationSection_sidebar__mainContent__3mEAg\",\"sidebar__navbar\":\"SidebarNewConversationSection_sidebar__navbar__2wNiE\",\"sidebar__title\":\"SidebarNewConversationSection_sidebar__title__1KWah\",\"sidebar__searchbar\":\"SidebarNewConversationSection_sidebar__searchbar__1KkWR\",\"sidebar__search\":\"SidebarNewConversationSection_sidebar__search__3jizx\",\"sidebar__searchIcon\":\"SidebarNewConversationSection_sidebar__searchIcon__13MQR\",\"sidebar__listContainer\":\"SidebarNewConversationSection_sidebar__listContainer__2QnyX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newContactList\":\"NewContactList_newContactList__3l80y\",\"newContactList__listContacts\":\"NewContactList_newContactList__listContacts__2qxLH\",\"newContactList__item\":\"NewContactList_newContactList__item__3i2SW\",\"title\":\"NewContactList_title__2KKn7\",\"newContactList__title\":\"NewContactList_newContactList__title__1sqNT\",\"newContactList__title2\":\"NewContactList_newContactList__title2__3b1BJ\"};"],"sourceRoot":""}