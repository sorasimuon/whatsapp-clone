{"version":3,"sources":["NewContact.module.css","context/stateProvider.js","axios.js","Typingbar.js","Message.js","Chat.js","SidebarConversation.js","SidebarConversationSection.js","NewContact.js","NewContactList.js","SidebarNewConversationSection.js","Sidebar.js","utilities/validator.js","Login.js","Register.js","Loading.js","App.js","reportWebVitals.js","context/reducer.js","index.js","SidebarConversationSection.module.css","SidebarNewConversationSection.module.css","NewContactList.module.css"],"names":["module","exports","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","instance","axios","create","baseURL","useStyles","makeStyles","theme","iconButton","fontSize","fontWeight","color","grey","inputInput","backgroundColor","borderRadius","width","height","Typingbar","user","currentConversation","useState","textMessage","settextMessage","classes","sendMessage","e","a","preventDefault","newMessage","message","firstname","email","post","then","res","console","log","data","Date","timestamp","toLocaleTimeString","className","IconButton","onSubmit","InputBase","placeholder","inputProps","onChange","target","Message","messageName","messageContent","messageTimestamp","messageReceiver","avatar","palette","getContrastText","deepOrange","marginRight","Chat","contacts","conversations","history","useHistory","getCurrentInterlocutorInfo","conversation","isEmpty","replace","chatters","chatterEmail","interlocutor","contact","lastname","setFirstname","setLastname","setEmail","getChatterInfo","useEffect","Avatar","charAt","messages","map","uuidv4","SidebarConversation","date","now","weekday","Array","getDay","translateDate","dispatch","setSelected","length","lastMessage","setLastMessage","getInterlocutorInfo","String","__id","onClick","type","currentConv","changeCurrentConversation","Divider","light","variant","searchIcon","addIcon","margin","SidebarConversationSection","styles","sidebar__mainContent","sidebar__navbar","sidebar__left","slice","sidebar__username","sidebar__right","sideSection","sidebar__searchbar","sidebar__search","sidebar__searchIcon","sidebar__listContainer","NewContact","createNewChat","activated","newContact","newGroupButton","padding","NewContactList","newContactList","newContactList__item","newContactList__title","newContactList__listContacts","title","newContactList__title2","backButton","marginButton","SidebarNewConversationSection","sidebar__title","Sidebar","sectionName","setSectionName","validateInput","checktype","password","password2","errors","Validator","push","isEmail","isusername","isValid","logo","textField","marginBottom","button","Login","setPassword","errorMessages","setErrorMessages","setUser","userId","signIn","credentials","catch","error","response","errorMessage","TextField","label","Button","href","logo2","logoPositionLeft","alignSelf","Register","setPassword2","register","newUser","err","k","to","Loading","setTimeout","CircularProgress","App","location","useLocation","get","contacts_list","syncContacts","convs","syncConversations","pathname","messageChannel","Pusher","cluster","subscribe","bind","unbind_all","unsubscribe","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","state","action","i","conversationId","_id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04eadb0b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"newContact\":\"NewContact_newContact__3dNVM\"};","import react, { createContext, useContext, useReducer } from \"react\";\r\n\r\n// Prepare the dataLayer ( also named store)\r\n// Equivalent to createStore in Redux\r\nexport const StateContext = createContext();\r\n\r\n//Wrap our app and provide the data layer\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);\r\n","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  // baseURL: \"http://localhost:9000\",\r\n  baseURL: \"https://whatsapp-bck.herokuapp.com/\",\r\n});\r\n\r\nexport default instance;\r\n","import React, { useState } from \"react\";\r\nimport { useStateValue } from \"./context/stateProvider\";\r\nimport \"./Typingbar.css\";\r\n\r\n// Material-UI\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport AttachFileIcon from \"@material-ui/icons/AttachFile\";\r\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport { grey } from \"@material-ui/core/colors\";\r\nimport MicNoneIcon from \"@material-ui/icons/MicNone\";\r\nimport axios from \"./axios\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  iconButton: {\r\n    fontSize: 30,\r\n    fontWeight: 200,\r\n    color: grey[600],\r\n  },\r\n  inputInput: {\r\n    backgroundColor: \"rgba(255,255,255,0.5)\",\r\n    borderRadius: \"20px\",\r\n    color: \"rgb(100,100,100)\",\r\n    width: \"100%\",\r\n    height: 40,\r\n  },\r\n}));\r\n\r\nfunction Typingbar() {\r\n  const [{ user, currentConversation }, dispatch] = useStateValue();\r\n  const [textMessage, settextMessage] = useState(\"\");\r\n  const classes = useStyles();\r\n\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Create Message object\r\n    const newMessage = {\r\n      message: textMessage,\r\n      firstname: user.firstname,\r\n      email: user.email,\r\n    };\r\n\r\n    // erase the typing bar\r\n    settextMessage(\"\");\r\n\r\n    const req = await axios\r\n      .post(\"/messages/new-message\", {\r\n        newMessage: newMessage,\r\n        currentConversation: currentConversation,\r\n      })\r\n      .then((res) => {\r\n        console.log(\r\n          `Sent new message from ${res.data.firstname} at ${new Date(\r\n            res.data.timestamp\r\n          ).toLocaleTimeString()} >> ${res.data.message}`\r\n        );\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"typingbar\">\r\n      <IconButton>\r\n        <InsertEmoticonIcon className={classes.iconButton} />\r\n      </IconButton>\r\n      <IconButton>\r\n        <AttachFileIcon className={classes.iconButton} />\r\n      </IconButton>\r\n\r\n      <div className=\"typing-search\">\r\n        <form onSubmit={(e) => sendMessage(e)}>\r\n          <InputBase\r\n            placeholder=\"Type text\"\r\n            className={classes.inputInput}\r\n            inputProps={{ \"aria-label\": \"search\" }}\r\n            onChange={(e) => settextMessage(e.target.value)}\r\n            value={textMessage}\r\n          />\r\n        </form>\r\n      </div>\r\n\r\n      <IconButton>\r\n        {textMessage ? (\r\n          <SendOutlinedIcon className={classes.iconButton} />\r\n        ) : (\r\n          <MicNoneIcon className={classes.iconButton} />\r\n        )}\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Typingbar;\r\n","import React from \"react\";\r\nimport \"./Message.css\";\r\n\r\nfunction Message({\r\n  messageName,\r\n  messageContent,\r\n  messageTimestamp,\r\n  messageReceiver = false,\r\n}) {\r\n  return (\r\n    <div className={`message ${messageReceiver ? \"message-receiver\" : \"\"}`}>\r\n      {/* <span className=\"message-name\">{messageName}</span> */}\r\n      <span className=\"message-content\">{messageContent}</span>\r\n      <span className=\"message-timestamp\">{messageTimestamp}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Message;\r\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\r\nimport { useStateValue } from \"./context/stateProvider\";\r\nimport axios from \"./axios\";\r\nimport isEmpty from \"is-empty\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./Chat.css\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { deepOrange } from \"@material-ui/core/colors\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport Typingbar from \"./Typingbar\";\r\nimport Message from \"./Message\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatar: {\r\n    color: theme.palette.getContrastText(deepOrange[500]),\r\n    backgroundColor: deepOrange[300],\r\n    height: \"40px\",\r\n    width: \"40px\",\r\n    marginRight: 20,\r\n  },\r\n}));\r\n\r\nfunction Chat() {\r\n  const classes = useStyles();\r\n  const [\r\n    { user, currentConversation, contacts, conversations },\r\n    dispatch,\r\n  ] = useStateValue();\r\n  const history = useHistory();\r\n\r\n  const getCurrentInterlocutorInfo = () => {\r\n    let email = \"\";\r\n    // get the interlocurotr address from conversation\r\n    let conversation = null;\r\n    try {\r\n      if (isEmpty(currentConversation) && !isEmpty(conversations)) {\r\n        conversation = conversations[0];\r\n      } else if (!isEmpty(currentConversation)) {\r\n        conversation = currentConversation;\r\n      } else {\r\n        history.replace(\"/whatsapp-clone/login\");\r\n      }\r\n\r\n      for (let chatterEmail of conversation.chatters) {\r\n        if (chatterEmail !== user.email) {\r\n          email = chatterEmail;\r\n        }\r\n      }\r\n\r\n      // get interlocutor firstname and lastname from contacts\r\n      let interlocutor = {};\r\n      for (let contact of contacts) {\r\n        if (contact.email === email) {\r\n          interlocutor.firstname = contact.firstname;\r\n          interlocutor.lastname = contact.lastname;\r\n          interlocutor.email = contact.email;\r\n        }\r\n      }\r\n\r\n      return interlocutor;\r\n    } catch {\r\n      history.replace(\"/whatsapp-clone/login\");\r\n    }\r\n  };\r\n\r\n  const [firstname, setFirstname] = useState(\r\n    getCurrentInterlocutorInfo()?.firstname\r\n  );\r\n  const [lastname, setLastname] = useState(\r\n    getCurrentInterlocutorInfo()?.lastname\r\n  );\r\n  const [email, setEmail] = useState(getCurrentInterlocutorInfo()?.email);\r\n\r\n  // find the information of the interlocutor\r\n  const getChatterInfo = async () => {\r\n    if (isEmpty(currentConversation)) {\r\n      console.log(\"marche pas \");\r\n    } else {\r\n      setFirstname(getCurrentInterlocutorInfo().firstname);\r\n      setLastname(getCurrentInterlocutorInfo().lastname);\r\n      setEmail(getCurrentInterlocutorInfo().email);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getChatterInfo();\r\n  }, [currentConversation]);\r\n\r\n  return (\r\n    <div className=\"chat\">\r\n      {/* Chat Bar */}\r\n      <div className=\"chatbar-navbar\">\r\n        <div className=\"chatbar-left\">\r\n          <Avatar\r\n            className={classes.avatar}\r\n            // src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSkcSGx-KlYubrDTQtCaFWZ3pBI3CJOxWwUHw&usqp=CAU\"\r\n          >\r\n            {firstname?.charAt(0)}\r\n          </Avatar>\r\n          <div className=\"chatbar-title\">\r\n            <label className=\"chatbar-name\">\r\n              {firstname} {lastname}\r\n            </label>\r\n            <label className=\"chatbar-status\">Online</label>\r\n          </div>\r\n        </div>\r\n        <div className=\"chatbar-right\">\r\n          <IconButton>\r\n            <SearchIcon />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreHorizIcon />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Conversation area */}\r\n      <div className=\"chat-body\">\r\n        {!isEmpty(currentConversation.messages)\r\n          ? currentConversation.messages?.map((message) => (\r\n              <div key={uuidv4()}>\r\n                <Message\r\n                  key={uuidv4()}\r\n                  messageName={message.firstname}\r\n                  messageContent={message.message}\r\n                  messageTimestamp={new Date(\r\n                    message.timestamp\r\n                  ).toLocaleTimeString()}\r\n                  messageReceiver={user.email === message.email ? true : false}\r\n                />\r\n              </div>\r\n            ))\r\n          : \"\"}\r\n      </div>\r\n      <Typingbar />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useStateValue } from \"./context/stateProvider\";\r\nimport axios from \"./axios\";\r\nimport isEmpty from \"is-empty\";\r\n\r\nimport \"./SidebarConversation.css\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { deepOrange } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatar: {\r\n    height: \"60px\",\r\n    width: \"60px\",\r\n    backgroundColor: deepOrange[300],\r\n  },\r\n}));\r\n\r\nconst translateDate = (date) => {\r\n  let now = new Date();\r\n  const weekday = new Array(7);\r\n  let result;\r\n  weekday[0] = \"Sunday\";\r\n  weekday[1] = \"Monday\";\r\n  weekday[2] = \"Tuesday\";\r\n  weekday[3] = \"Wednesday\";\r\n  weekday[4] = \"Thursday\";\r\n  weekday[5] = \"Friday\";\r\n  weekday[6] = \"Saturday\";\r\n\r\n  result = weekday[now.getDay()];\r\n  return result;\r\n};\r\n\r\nfunction SidebarConversation({ conversation }) {\r\n  const classes = useStyles();\r\n  const date = translateDate(Date.now());\r\n  const [\r\n    { messages, user, currentConversation, conversations, contacts },\r\n    dispatch,\r\n  ] = useStateValue();\r\n\r\n  const [mounted, setMounted] = useState(true);\r\n  const [selected, setSelected] = useState(false);\r\n  const [lastMessage, setLastMessage] = useState(\r\n    conversation.messages[conversation.messages.length - 1]?.message\r\n  );\r\n\r\n  const getInterlocutorInfo = () => {\r\n    let email = \"\";\r\n    // get the interlocurotr address from conversation\r\n    for (let chatterEmail of conversation.chatters) {\r\n      if (chatterEmail !== user.email) {\r\n        email = chatterEmail;\r\n      }\r\n    }\r\n\r\n    // get interlocutor firstname and lastname from contacts\r\n    let interlocutor = {};\r\n    for (let contact of contacts) {\r\n      if (contact.email === email) {\r\n        interlocutor.firstname = contact.firstname;\r\n        interlocutor.lastname = contact.lastname;\r\n        interlocutor.email = contact.email;\r\n      }\r\n    }\r\n\r\n    return interlocutor;\r\n  };\r\n  const [firstname, setFirstname] = useState(getInterlocutorInfo().firstname);\r\n  const [lastname, setLastname] = useState(getInterlocutorInfo().lastname);\r\n  const [email, setEmail] = useState(getInterlocutorInfo().email);\r\n\r\n  useEffect(() => {\r\n    if (!isEmpty(conversation.messages)) {\r\n      setLastMessage(\r\n        conversation.messages[conversation.messages.length - 1].message\r\n      );\r\n    } else {\r\n      setLastMessage(\"Hey ! I am using What's App Clone\");\r\n    }\r\n  }, [conversation]);\r\n\r\n  // Define the new currentConversation\r\n  const changeCurrentConversation = (e) => {\r\n    e.preventDefault();\r\n    dispatch({\r\n      type: \"SET_CURRENT_CONVERSATION\",\r\n      currentConv: conversation,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (String(conversation.__id) === String(currentConversation.__id)) {\r\n      setSelected(true);\r\n    } else {\r\n      setSelected(false);\r\n    }\r\n  }, [currentConversation]);\r\n\r\n  return (\r\n    <div\r\n      className={`sidebarConversation`}\r\n      onClick={(e) => changeCurrentConversation(e)}\r\n    >\r\n      <div className=\"sidebarConversation-avatar\">\r\n        <Avatar className={classes.avatar} width=\"40px\" height=\"40px\">\r\n          {firstname?.charAt(0)}\r\n        </Avatar>\r\n      </div>\r\n      <div className=\"sidebarConversation-content\">\r\n        <div className=\"sidebarConversation-title\">\r\n          <label className=\"sidebarConversation-name\">\r\n            {firstname} {lastname}\r\n          </label>\r\n          <label className=\"sidebarConversation-date\">{date}</label>\r\n        </div>\r\n        <div className=\"sidebarConversation-conversation\">\r\n          <label className=\"sidebarConversation-conv\">{lastMessage}</label>\r\n        </div>\r\n        <Divider light variant=\"fullWidth\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarConversation;\r\n","// Section where is diaplayed the list of conversation engaged by the signed in user\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useStateValue } from \"./context/stateProvider\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport \"./SidebarConversationSection.module.css\";\r\nimport styles from \"./SidebarConversationSection.module.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport MoreVert from \"@material-ui/icons/MoreVert\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { deepOrange } from \"@material-ui/core/colors\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport SidebarConversation from \"./SidebarConversation\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatar: {\r\n    backgroundColor: deepOrange[300],\r\n  },\r\n  inputInput: {\r\n    backgroundColor: \"rgba(255,255,255,0.5)\",\r\n    borderRadius: \"20px\",\r\n    width: \"80%\",\r\n    color: \"rgb(150,150,150)\",\r\n  },\r\n  searchIcon: {\r\n    fontSize: 20,\r\n  },\r\n  addIcon: {\r\n    fontSize: 30,\r\n  },\r\n  margin: {\r\n    margin: 5,\r\n  },\r\n}));\r\n\r\nfunction SidebarConversationSection() {\r\n  const classes = useStyles();\r\n  const [{ user, contacts, conversations }, dispatch] = useStateValue();\r\n\r\n  useEffect(() => {}, [conversations]);\r\n\r\n  return (\r\n    <div className={styles.sidebar__mainContent}>\r\n      <div className={styles.sidebar__navbar}>\r\n        <div className={styles.sidebar__left}>\r\n          <Avatar className={`${classes.avatar} ${classes.margin}`}>\r\n            {user?.firstname.slice(0, 1)}\r\n          </Avatar>\r\n          <p className={`${styles.sidebar__username} ${classes.margin}`}>\r\n            {user?.firstname}\r\n          </p>\r\n        </div>\r\n        <div className={styles.sidebar__right}>\r\n          <IconButton>\r\n            <DonutLargeIcon />\r\n          </IconButton>\r\n          <IconButton\r\n            onClick={(e) =>\r\n              dispatch({\r\n                type: \"SET_SIDEBAR_SECTION\",\r\n                sideSection: \"new-conversation\",\r\n              })\r\n            }\r\n          >\r\n            <AddIcon className={classes.addIcon} />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreVert />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className={styles.sidebar__searchbar}>\r\n        <div className={styles.sidebar__search}>\r\n          <div className={styles.sidebar__searchIcon}>\r\n            <SearchIcon className={classes.searchIcon} />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search or start a new chat\"\r\n            className={classes.inputInput}\r\n            inputProps={{ \"aria-label\": \"search\" }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className={styles.sidebar__listContainer}>\r\n        {conversations.map((conversation) => (\r\n          <SidebarConversation key={uuidv4()} conversation={conversation} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarConversationSection;\r\n","import React from \"react\";\r\nimport axios from \"./axios\";\r\nimport { useStateValue } from \"./context/stateProvider\";\r\n\r\nimport styles from \"./NewContact.module.css\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport { deepOrange } from \"@material-ui/core/colors\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatar: {\r\n    height: 40,\r\n    width: 40,\r\n    marginRight: 10,\r\n    backgroundColor: deepOrange[600],\r\n  },\r\n}));\r\n\r\nfunction NewContact({ contact }) {\r\n  const classes = useStyles();\r\n  const [{ user, currentConversation }, dispatch] = useStateValue();\r\n\r\n  const createNewChat = async () => {\r\n    // e.preventDefault();\r\n\r\n    await axios\r\n      .post(\"conversations/new-chat\", { chatters: [user.email, contact.email] })\r\n      .then((res) => {\r\n        console.log(res);\r\n        console.log(\r\n          \"Created new chat between\" +\r\n            res.data.chatters[0] +\r\n            \" and\" +\r\n            res.data.chatters[1] +\r\n            \" : activated => \" +\r\n            res.data.activated\r\n        );\r\n        dispatch({\r\n          type: \"SET_CURRENT_CONVERSATION\",\r\n          currentConv: res.data,\r\n        });\r\n        dispatch({\r\n          type: \"ADD_CONVERSATION\",\r\n          conversation: res.data,\r\n        });\r\n        dispatch({\r\n          type: \"SET_SIDEBAR_SECTION\",\r\n          sideSection: \"conversations\",\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={styles.newContact} onClick={(e) => createNewChat()}>\r\n        <Avatar\r\n          className={classes.avatar}\r\n          //   src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcSkcSGx-KlYubrDTQtCaFWZ3pBI3CJOxWwUHw&usqp=CAU\"\r\n        >\r\n          {contact.firstname[0]}\r\n        </Avatar>\r\n        <label>\r\n          {contact.firstname} {contact.lastname}\r\n        </label>\r\n      </div>\r\n      <Divider light variant=\"fullWidth\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewContact;\r\n","import React from \"react\";\r\nimport { useStateValue } from \"./context/stateProvider\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nimport styles from \"./NewContactList.module.css\";\r\nimport { makeStyles, withTheme } from \"@material-ui/core\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\r\nimport NewContact from \"./NewContact\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  newGroupButton: {\r\n    borderRadius: \"50%\",\r\n    backgroundColor: \"#007868\",\r\n    color: \"white\",\r\n    width: 30,\r\n    height: 30,\r\n    padding: 10,\r\n    marginRight: 10,\r\n  },\r\n}));\r\n\r\nfunction NewContactList() {\r\n  const classes = useStyles();\r\n\r\n  const [{ sideSection, contacts }, dispatch] = useStateValue();\r\n  // console.log(\"CONTACTS LIST >> \");\r\n  // console.log(contacts);\r\n\r\n  return (\r\n    <div className={styles.newContactList}>\r\n      <div\r\n        className={styles.newContactList__item}\r\n        onClick={(e) =>\r\n          dispatch({ type: \"SET_SIDEBAR_SECTION\", sideSection: \"new_group\" })\r\n        }\r\n      >\r\n        <GroupAddIcon className={classes.newGroupButton} />\r\n\r\n        <label className={styles.newContactList__title}>NEW GROUP</label>\r\n      </div>\r\n      <Divider light variant=\"fullWidth\" />\r\n      <div className={styles.newContactList__listContacts}>\r\n        <div className={`${styles.title}`}>\r\n          <label className={styles.newContactList__title2}>\r\n            FREQUENTLY CONTACTED\r\n          </label>\r\n        </div>\r\n        <Divider light variant=\"fullWidth\" />\r\n        {contacts.map((contact) => (\r\n          <NewContact key={uuidv4()} contact={contact} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewContactList;\r\n","import React from \"react\";\r\nimport { useStateValue } from \"./context/stateProvider\";\r\nimport NewContactList from \"./NewContactList\";\r\n\r\nimport styles from \"./SidebarNewConversationSection.module.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport InputBase from \"@material-ui/core/InputBase\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nconst useStyles = makeStyles({\r\n  backButton: {\r\n    color: \"white\",\r\n    fontSize: 35,\r\n  },\r\n  marginButton: {\r\n    marginRight: 10,\r\n  },\r\n});\r\n\r\nfunction SidebarNewConversationSection() {\r\n  const classes = useStyles();\r\n  const [{}, dispatch] = useStateValue();\r\n  return (\r\n    <div className={styles.sidebar__mainContent}>\r\n      {/* Header */}\r\n      <div className={styles.sidebar__navbar}>\r\n        <IconButton\r\n          className={classes.marginButton}\r\n          onClick={(e) =>\r\n            dispatch({\r\n              type: \"SET_SIDEBAR_SECTION\",\r\n              sideSection: \"conversations\",\r\n            })\r\n          }\r\n        >\r\n          <ArrowBackIcon className={classes.backButton} />\r\n        </IconButton>\r\n        <p className={styles.sidebar__title}>New Chat</p>\r\n      </div>\r\n      {/* Search Bar */}\r\n      <div className={styles.sidebar__searchbar}>\r\n        <div className={styles.sidebar__search}>\r\n          <div className={styles.sidebar__searchIcon}>\r\n            <SearchIcon className={classes.searchIcon} />\r\n          </div>\r\n          <InputBase\r\n            placeholder=\"Search or start a new chat\"\r\n            className={classes.inputInput}\r\n            inputProps={{ \"aria-label\": \"search\" }}\r\n          />\r\n        </div>\r\n      </div>\r\n      <div className={styles.sidebar__listContainer}>\r\n        <NewContactList />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarNewConversationSection;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useStateValue } from \"./context/stateProvider\";\r\nimport SidebarConversationSection from \"./SidebarConversationSection\";\r\nimport SidebarNewConversationSection from \"./SidebarNewConversationSection\";\r\n\r\nimport \"./Sidebar.css\";\r\n\r\nfunction Sidebar() {\r\n  const [\r\n    { user, conversations, sideSection, currentConversation },\r\n    dispatch,\r\n  ] = useStateValue();\r\n  const [sectionName, setSectionName] = useState(sideSection);\r\n\r\n  useEffect(() => {\r\n    console.log(\"sideSection >>>\", sideSection);\r\n    setSectionName(sideSection);\r\n  }, [sideSection]);\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      {sectionName === \"conversations\" ? <SidebarConversationSection /> : \"\"}\r\n      {sectionName === \"new-conversation\" ? (\r\n        <SidebarNewConversationSection />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport Validator from \"validator\";\r\nimport isEmpty from \"is-empty\";\r\n\r\nconst validateInput = (\r\n  { firstname = \"\", lastname = \"\", email, password, password2 = \"\" },\r\n  checktype\r\n) => {\r\n  let errors = [];\r\n\r\n  switch (checktype) {\r\n    case \"login\":\r\n      //   const { email, password } = input;\r\n      //check email\r\n      if (!Validator.isEmpty(email)) {\r\n        if (!Validator.isEmail(email)) {\r\n          errors.push(\"Error format email\");\r\n        }\r\n      } else {\r\n        errors.push(\"Username is required\");\r\n      }\r\n\r\n      // check Password\r\n      if (Validator.isEmpty(password)) {\r\n        errors.push(\"Password is required\");\r\n      }\r\n\r\n      break;\r\n    case \"register\":\r\n      //   const { firstname, lastname, email, password, password2 } = input;\r\n\r\n      // check firstname\r\n      errors.push(Validator.isEmpty(firstname) ? \"First name is required\" : \"\");\r\n      errors.push(Validator.isEmpty(lastname) ? \"Last name is required\" : \"\");\r\n\r\n      //check email\r\n      if (!Validator.isEmpty(email)) {\r\n        if (!Validator.isusername(email)) {\r\n          errors.push(\"Error format email\");\r\n        }\r\n      } else {\r\n        errors.push(\"email is required\");\r\n      }\r\n\r\n      // check Password\r\n      errors.push(Validator.isEmpty(password) ? \"Password is required\" : \"\");\r\n      errors.push(Validator.isEmpty(password2) ? \"Password2 is required\" : \"\");\r\n      break;\r\n  }\r\n  return {\r\n    errors,\r\n    isValid: isEmpty(errors),\r\n  };\r\n};\r\n\r\nexport default validateInput;\r\n","import React, { useState } from \"react\";\r\nimport \"./Login.css\";\r\nimport { useStateValue } from \"./context/stateProvider\";\r\nimport axios from \"./axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AlternateEmailIcon from \"@material-ui/icons/AlternateEmail\";\r\nimport validateInput from \"./utilities/validator\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  logo: {\r\n    width: 40,\r\n    height: 40,\r\n  },\r\n  textField: {\r\n    width: \"80%\",\r\n  },\r\n  margin: {\r\n    marginBottom: 20,\r\n  },\r\n  button: {\r\n    width: \"80%\",\r\n  },\r\n}));\r\n\r\nfunction Login() {\r\n  const [{ user }, dispatch] = useStateValue();\r\n  const classes = useStyles();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessages, setErrorMessages] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const setUser = (firstname, lastname, email) => {\r\n    dispatch({\r\n      type: \"SET_USER\",\r\n      user: {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        email: email,\r\n        userId: \"random_value\",\r\n      },\r\n    });\r\n  };\r\n\r\n  const signIn = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Reset the list of error messages\r\n    setErrorMessages([]);\r\n\r\n    //   Check validity of the input\r\n    const { errors, isValid } = validateInput({ email, password }, \"login\");\r\n\r\n    if (isValid) {\r\n      const credentials = {\r\n        email: email,\r\n        password: password,\r\n      };\r\n      console.log(`Connection attempt from ${credentials.email} >>>`);\r\n      console.log(credentials);\r\n      const request = await axios\r\n        .post(\"/users/login\", credentials)\r\n        .then((res) => {\r\n          console.log(\"Login successful >> \", res.data.data.email);\r\n          // save the user in the data layer/store\r\n          setUser(\r\n            res.data.data.firstname,\r\n            res.data.data.lastname,\r\n            res.data.data.email\r\n          );\r\n          history.push(\"/whatsapp-clone/loading\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(error.response);\r\n          setErrorMessages([error.response.data]);\r\n          // reset Password and email\r\n          setPassword(\"\");\r\n          setEmail(\"\");\r\n        });\r\n    } else {\r\n      console.log(\">>> Error Sign In : check credentials\");\r\n      setErrorMessages(errors);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <div className=\"login\">\r\n        <IconButton>\r\n          <AlternateEmailIcon className={classes.logo} />\r\n        </IconButton>\r\n\r\n        <p> Sign In </p>\r\n        <ul>\r\n          {errorMessages.map((errorMessage) => (\r\n            <li key={uuidv4()} className=\"errorMessage\">\r\n              {errorMessage}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <TextField\r\n          className={`${classes.textField} ${classes.margin}`}\r\n          label=\"email\"\r\n          variant=\"outlined\"\r\n          value={email}\r\n          type=\"email\"\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <TextField\r\n          className={`${classes.textField} ${classes.margin}`}\r\n          label=\"password\"\r\n          variant=\"outlined\"\r\n          value={password}\r\n          type=\"password\"\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <Button\r\n          className={`${classes.button} ${classes.margin}`}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          onClick={(e) => signIn(e)}\r\n        >\r\n          Sign In\r\n        </Button>\r\n        <p className={classes.margin}> Or </p>\r\n        <Button\r\n          className={`${classes.button} ${classes.margin}`}\r\n          href=\"/whatsapp-clone/new-account\"\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n        >\r\n          Create new account\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"./axios\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useStateValue } from \"./context/stateProvider\";\r\nimport \"./Register.css\";\r\n\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport AlternateEmailIcon from \"@material-ui/icons/AlternateEmail\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  logo: {\r\n    width: 40,\r\n    height: 40,\r\n  },\r\n  logo2: {\r\n    width: 18,\r\n    height: 18,\r\n  },\r\n  logoPositionLeft: {\r\n    alignSelf: \"start\",\r\n  },\r\n  textField: {\r\n    width: \"80%\",\r\n  },\r\n  margin: {\r\n    marginBottom: 20,\r\n  },\r\n  button: {\r\n    width: \"80%\",\r\n  },\r\n}));\r\n\r\nfunction Register() {\r\n  const classes = useStyles();\r\n  const [firstname, setFirstname] = useState(\"\");\r\n  const [lastname, setLastname] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [password2, setPassword2] = useState(\"\");\r\n  const [{ user }, dispatch] = useStateValue();\r\n  const errors = [];\r\n\r\n  const history = useHistory();\r\n\r\n  const register = async (e) => {\r\n    e.preventDefault();\r\n    // Create object to post to new registration\r\n    const newUser = {\r\n      firstname: firstname,\r\n      lastname: lastname,\r\n      email: email,\r\n      password: password,\r\n      password2: password2,\r\n    };\r\n    // Method post to push data to server side\r\n    axios\r\n      .post(\"/users/register\", newUser)\r\n      .then((response) => {\r\n        // if new user succesfully connected, add the new user as the user in localStorage context API\r\n        if (response) {\r\n          // Push to local storage\r\n          console.log(\"New user registered >>> \");\r\n          console.log(response.data);\r\n          dispatch({\r\n            type: \"SET_USER\",\r\n            user: {\r\n              firstname: response.data.firstname,\r\n              lastname: response.data.lastname,\r\n              email: response.data.email,\r\n              userId: \"random_value\",\r\n            },\r\n          });\r\n          history.push(\"/whatsapp-clone/conversations\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error registering user\");\r\n        console.log(err.response.data);\r\n        for (let k in err.errors) {\r\n          errors.push([err.errors[k]]);\r\n        }\r\n        console.log(errors);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <div className=\"register\">\r\n        <Link to=\"/whatsapp-clone/login\" className={classes.logoPositionLeft}>\r\n          <IconButton>\r\n            <ArrowBackIcon className={classes.logo2} />\r\n          </IconButton>\r\n        </Link>\r\n\r\n        <Link to=\"/whatsapp-clone/login\">\r\n          <IconButton>\r\n            <AlternateEmailIcon className={classes.logo} />\r\n          </IconButton>\r\n        </Link>\r\n\r\n        <p> New Account </p>\r\n\r\n        <ul>\r\n          {errors.map((errorMessage) => (\r\n            <li>{errorMessage}</li>\r\n          ))}\r\n        </ul>\r\n\r\n        <TextField\r\n          className={`${classes.textField} ${classes.margin}`}\r\n          label=\"First name\"\r\n          variant=\"outlined\"\r\n          value={firstname}\r\n          onChange={(e) => setFirstname(e.target.value)}\r\n        />\r\n        <TextField\r\n          className={`${classes.textField} ${classes.margin}`}\r\n          label=\"Last name\"\r\n          variant=\"outlined\"\r\n          value={lastname}\r\n          onChange={(e) => setLastname(e.target.value)}\r\n        />\r\n        <MoreHorizIcon className={classes.margin} />\r\n        <TextField\r\n          className={`${classes.textField} ${classes.margin}`}\r\n          label=\"Email address\"\r\n          variant=\"outlined\"\r\n          type=\"email\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n        />\r\n        <TextField\r\n          className={`${classes.textField} ${classes.margin}`}\r\n          label=\"Password\"\r\n          variant=\"outlined\"\r\n          type=\"password\"\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n        <TextField\r\n          className={`${classes.textField} ${classes.margin}`}\r\n          label=\"Confirm password\"\r\n          variant=\"outlined\"\r\n          type=\"password\"\r\n          value={password2}\r\n          onChange={(e) => setPassword2(e.target.value)}\r\n        />\r\n\r\n        <Button\r\n          className={`${classes.button} ${classes.margin}`}\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          type=\"submit\"\r\n          onClick={(e) => register(e)}\r\n        >\r\n          Sign Up\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n","import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport styles from \"./Loading.module.css\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { teal } from \"@material-ui/core/colors\";\r\n\r\nfunction Loading() {\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      history.push(\"/whatsapp-clone/conversations\");\r\n    }, 3000);\r\n    return () => {};\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <CircularProgress />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Loading;\r\n","import React, { useEffect, useState } from \"react\";\nimport { useStateValue } from \"./context/stateProvider\";\nimport isEmpty from \"is-empty\";\n\nimport \"./App.css\";\nimport Chat from \"./Chat\";\nimport Sidebar from \"./Sidebar\";\nimport Login from \"./Login\";\nimport Register from \"./Register\";\nimport Loading from \"./Loading\";\nimport \"./App.css\";\nimport Pusher from \"pusher-js\";\nimport axios from \"./axios\";\n\nimport { Route, Switch, useHistory, useLocation } from \"react-router-dom\";\n\nfunction App() {\n  //Declare constants\n  const [\n    { user, currentConversation, conversations },\n    dispatch,\n  ] = useStateValue();\n  const history = useHistory();\n  const location = useLocation();\n\n  const getChatterInfo = async (conversation) => {\n    let chatterEmail = null;\n    let interlocutor = {};\n\n    for (let email of conversation.chatters) {\n      if (email !== user.email) {\n        chatterEmail = email;\n      }\n    }\n    // get chatterEmail' information\n    const response = await axios.get(\"/users/user\", {\n      params: { email: chatterEmail },\n    });\n\n    await setTimeout(() => {\n      interlocutor.firstname = response.data.firstname;\n      interlocutor.lastname = response.data.lastname;\n      interlocutor.email = response.data.email;\n      console.log(\"done\");\n    }, 250);\n\n    return interlocutor;\n  };\n\n  useEffect(() => {\n    // If a user is not logged in\n    if (!user) {\n      if (location.pathname !== \"/whatsapp-clone/new-account\") {\n        history.replace(\"/whatsapp-clone/login\");\n      }\n    } else {\n      // 1. Synchronize with the list of contacts\n      const syncContacts = async () => {\n        await axios.get(\"/users/sync\").then((response) => {\n          const contacts_list = [];\n          for (let contact of response.data) {\n            if (contact.email !== user.email) {\n              contacts_list.push(contact);\n            }\n          }\n          dispatch({\n            type: \"SET_CONTACTS\",\n            contacts: contacts_list,\n          });\n        });\n      };\n      syncContacts();\n\n      // 2. Synchronize with the list of conversation associated to the user\n      const syncConversations = async () => {\n        await axios.post(\"/conversations/sync\", user).then((response) => {\n          if (response.data) {\n            console.log(\"again\");\n            console.log(response.data);\n            dispatch({\n              type: \"SET_CONVERSATIONS_LIST\",\n              convs: response.data,\n            });\n            // 4. Define the first conversation in the list as the currentConversation (wait 1.5 sec)\n            if (isEmpty(currentConversation)) {\n              dispatch({\n                type: \"SET_CURRENT_CONVERSATION\",\n                currentConv: response.data[0],\n              });\n            }\n          }\n        });\n      };\n      syncConversations();\n    }\n  }, [user]);\n\n  // Use Effect that subscribe to Pusher to get notified\n  ///when a new message have been sent from a user\n  useEffect(() => {\n    // Pusher.logToConsole = true;\n\n    const pusher = new Pusher(\"3678c5b88461dcff7cb9\", { cluster: \"eu\" });\n\n    const messageChannel = pusher.subscribe(\"messages\");\n    messageChannel.bind(\"updated\", (data) => {\n      console.log(data);\n      dispatch({\n        type: \"ADD_NEW_MESSAGE\",\n        data: data,\n      });\n\n      // setMessages([...messages, data]);\n    });\n\n    // Return to clean up the subscription\n    return () => {\n      messageChannel.unbind_all();\n      messageChannel.unsubscribe();\n    };\n  }, [conversations]);\n\n  return (\n    <div className=\"app\">\n      <Switch>\n        <Route path=\"/whatsapp-clone/login\">\n          <Login />\n        </Route>\n        <Route path=\"/whatsapp-clone/new-account\">\n          <Register />\n        </Route>\n        <Route path=\"/whatsapp-clone/conversations\">\n          <div className=\"app-body\">\n            <Sidebar />\n            <Chat />\n          </div>\n        </Route>\n        <Route path=\"/whatsapp-clone/loading\">\n          <Loading />\n        </Route>\n        <Route path=\"/\">\n          <Login />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const initialState = {\r\n  user: null,\r\n  conversations: [],\r\n  sideSection: \"conversations\",\r\n  contacts: [],\r\n  currentConversation: {},\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n    case \"SET_SIDEBAR_SECTION\":\r\n      return {\r\n        ...state,\r\n        sideSection: action.sideSection,\r\n      };\r\n    case \"SET_CONTACTS\":\r\n      return {\r\n        ...state,\r\n        contacts: action.contacts,\r\n      };\r\n    case \"SET_CURRENT_CONVERSATION\":\r\n      return {\r\n        ...state,\r\n        currentConversation: action.currentConv,\r\n      };\r\n    case \"ADD_CONVERSATION\":\r\n      return {\r\n        ...state,\r\n        conversations: [...state.conversations, action.conversation],\r\n      };\r\n    case \"SET_CONVERSATIONS_LIST\":\r\n      return {\r\n        ...state,\r\n        conversations: action.convs,\r\n      };\r\n\r\n    case \"ADD_NEW_MESSAGE\":\r\n      for (let i = 0; i < state.conversations.length; i++) {\r\n        if (\r\n          String(action.data.conversationId) ===\r\n          String(state.conversations[i]._id)\r\n        ) {\r\n          console.log(\"id 1 = \" + String(action.data.conversationId));\r\n          console.log(\"id 2 = \" + String(state.conversations[i]._id));\r\n          state.conversations[i].messages.push(action.data.message);\r\n          console.log(state.conversations[i]);\r\n          return {\r\n            ...state,\r\n          };\r\n        }\r\n      }\r\n    default:\r\n      break;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { StateProvider } from \"./context/stateProvider\";\nimport reducer, { initialState } from \"./context/reducer\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <Router>\n        <App />\n      </Router>\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar__mainContent\":\"SidebarConversationSection_sidebar__mainContent__3f0Iq\",\"sidebar__left\":\"SidebarConversationSection_sidebar__left__3dOap\",\"sidebar__username\":\"SidebarConversationSection_sidebar__username__2F3mX\",\"sidebar__navbar\":\"SidebarConversationSection_sidebar__navbar__33nIS\",\"sidebar__searchbar\":\"SidebarConversationSection_sidebar__searchbar__1sVga\",\"sidebar__search\":\"SidebarConversationSection_sidebar__search__2jN3M\",\"sidebar__searchIcon\":\"SidebarConversationSection_sidebar__searchIcon__1R45K\",\"sidebar__listContainer\":\"SidebarConversationSection_sidebar__listContainer__3sT8Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar__mainContent\":\"SidebarNewConversationSection_sidebar__mainContent__3mEAg\",\"sidebar__navbar\":\"SidebarNewConversationSection_sidebar__navbar__2wNiE\",\"sidebar__title\":\"SidebarNewConversationSection_sidebar__title__1KWah\",\"sidebar__searchbar\":\"SidebarNewConversationSection_sidebar__searchbar__1KkWR\",\"sidebar__search\":\"SidebarNewConversationSection_sidebar__search__3jizx\",\"sidebar__searchIcon\":\"SidebarNewConversationSection_sidebar__searchIcon__13MQR\",\"sidebar__listContainer\":\"SidebarNewConversationSection_sidebar__listContainer__2QnyX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newContactList\":\"NewContactList_newContactList__3l80y\",\"newContactList__listContacts\":\"NewContactList_newContactList__listContacts__2qxLH\",\"newContactList__item\":\"NewContactList_newContactList__item__3i2SW\",\"title\":\"NewContactList_title__2KKn7\",\"newContactList__title\":\"NewContactList_newContactList__title__1sqNT\",\"newContactList__title2\":\"NewContactList_newContactList__title2__3b1BJ\"};"],"sourceRoot":""}